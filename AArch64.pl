
# https://github.com/MahdiSafsafi/opcodesDB

# ===================> ARMv8 opcodes map <===================

# Author : Mahdi Safsafi.

# Data structure is subject to change in the future !

# Doc: ARM Architecture Reference Manual. ARMv8, for ARMv8-A architecture profile (ID092916).


# Instructions are decoded from sub-groups and sub-groups are decoded from groups.
# And groups are decoded from main group.
# Aliases instructions are decoded from the main instruction.
# Eg: Alias instruction 'CMN' is decoded from 'ADDS' instruction.

# Each instruction contains:
# + opcode : instruction's opcode.
# + syntax : instruction's syntax.
# + fields : required fields of group to decode the instruction.
# + aliases: instruction aliases list.
# + conditions: exists only if instruction is an alias to the main instruction.
# And it indicates the conditions to switch from the main instruction to the alias instruction. 
# + variant,form : Instruction variant => Useful to generate instruction class.
# + symbols: Details of syntax symbols. It contains the following info:
# - name  :  symbol name.
# - range :  for some symbols, it indicates range of (imm,label,..).
# - field :  contains field(s) where the symbol is encoded.
# - values:  symbol values depending on specific condition "value if(condition(s))".

# The opcode fields ('FieldName Match FieldValue FieldSize') are shown as follow:
# 'Name[!|=]Value:Size'
# The 'x' x time means 'bits are not necessary when decoding/encoding the instruction.
# Eg: sf=1|opc=01|100100|N|immr:6|imms:6|Rn=11111|Rd:5

# syntax is shown as found in ARM doc.

# alias conditions is shown as a 'c-style' expression.
# Eg: 'MOV <Wd|WSP>, #<imm>' if (Rn == 0b11111 && ! MoveWidePreferred(sf, N, imms, immr))

# variant and form field are splited using '|'.


# Auto generated by 'DataGen.pl' script ==> Do not edit !


my @groups = (
  {
    'name' => 'A64 instruction index by encoding',
    'opcode' => 'xxx|op0:4|xxxxxxxxxxxxxxxxxxxxxxxxx',
    'instructions' => [
      {
        'fields' => 'op0=100x',
        'group' => 'Data processing - immediate'
      },
      {
        'fields' => 'op0=101x',
        'group' => 'Branches, exception generating and system instructions'
      },
      {
        'fields' => 'op0=x1x0',
        'group' => 'Loads and stores'
      },
      {
        'fields' => 'op0=x101',
        'group' => 'Data processing - register'
      },
      {
        'fields' => 'op0=0111',
        'group' => 'Data processing - SIMD and floating point'
      },
      {
        'fields' => 'op0=1111',
        'group' => 'Data processing - SIMD and floating point'
      }
    ]
  },
  {
    'name' => 'Data processing - immediate',
    'opcode' => 'xxx|100|op0:3|xxxxxxxxxxxxxxxxxxxxxxx',
    'instructions' => [
      {
        'fields' => 'op0=00x',
        'group' => 'PC-rel. addressing'
      },
      {
        'fields' => 'op0=01x',
        'group' => 'Add/subtract (immediate)'
      },
      {
        'fields' => 'op0=100',
        'group' => 'Logical (immediate)'
      },
      {
        'fields' => 'op0=101',
        'group' => 'Move wide (immediate)'
      },
      {
        'fields' => 'op0=110',
        'group' => 'Bitfield'
      },
      {
        'fields' => 'op0=111',
        'group' => 'Extract'
      }
    ]
  },
  {
    'name' => 'Add/subtract (immediate)',
    'opcode' => 'sf|op|S|10001|shift:2|imm12:12|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'S=0|op=0|sf=0',
        'aliases' => [
          {
            'conditions' => 'shift == 0b00 && imm12 == 0b000000000000 && (Rd == 0b11111 || Rn == 0b11111)',
            'opcode' => 'sf=0|op=0|S=0|10001|shift=00|imm12=000000000000|Rn:5|Rd:5',
            'syntax' => 'MOV <Wd|WSP>, <Wn|WSP>',
            'variant' => '32-bit',
            'form' => 'to/from SP',
            'symbols' => [
              {
                'name' => 'Wd|WSP',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn|WSP',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=0|S=0|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'ADD <Wd|WSP>, <Wn|WSP>, #<imm>{, <shift>}',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd|WSP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=1|op=0|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|op=0|S=1|10001|shift:2|imm12:12|Rn:5|Rd=11111',
            'syntax' => 'CMN <Wn|WSP>, #<imm>{, <shift>}',
            'variant' => '32-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Wn|WSP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm12',
                'range' => '0 .. 4095'
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL #0 if (shift == 00)',
                  'LSL #12 if (shift == 01)'
                ]
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=0|S=1|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'ADDS <Wd>, <Wn|WSP>, #<imm>{, <shift>}',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=0|op=1|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=1|S=0|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'SUB <Wd|WSP>, <Wn|WSP>, #<imm>{, <shift>}',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd|WSP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=1|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|op=1|S=1|10001|shift:2|imm12:12|Rn:5|Rd=11111',
            'syntax' => 'CMP <Wn|WSP>, #<imm>{, <shift>}',
            'variant' => '32-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Wn|WSP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm12',
                'range' => '0 .. 4095'
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL #0 if (shift == 00)',
                  'LSL #12 if (shift == 01)'
                ]
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=1|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'SUBS <Wd>, <Wn|WSP>, #<imm>{, <shift>}',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=0|op=0|sf=1',
        'aliases' => [
          {
            'conditions' => 'shift == 0b00 && imm12 == 0b000000000000 && (Rd == 0b11111 || Rn == 0b11111)',
            'opcode' => 'sf=1|op=0|S=0|10001|shift=00|imm12=000000000000|Rn:5|Rd:5',
            'syntax' => 'MOV <Xd|SP>, <Xn|SP>',
            'variant' => '64-bit',
            'form' => 'to/from SP',
            'symbols' => [
              {
                'name' => 'Xd|SP',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn|SP',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=0|S=0|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'ADD <Xd|SP>, <Xn|SP>, #<imm>{, <shift>}',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd|SP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=1|op=0|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|op=0|S=1|10001|shift:2|imm12:12|Rn:5|Rd=11111',
            'syntax' => 'CMN <Xn|SP>, #<imm>{, <shift>}',
            'variant' => '64-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Xn|SP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm12',
                'range' => '0 .. 4095'
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL #0 if (shift == 00)',
                  'LSL #12 if (shift == 01)'
                ]
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=0|S=1|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'ADDS <Xd>, <Xn|SP>, #<imm>{, <shift>}',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=0|op=1|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=1|S=0|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'SUB <Xd|SP>, <Xn|SP>, #<imm>{, <shift>}',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd|SP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=1|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|op=1|S=1|10001|shift:2|imm12:12|Rn:5|Rd=11111',
            'syntax' => 'CMP <Xn|SP>, #<imm>{, <shift>}',
            'variant' => '64-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Xn|SP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm12',
                'range' => '0 .. 4095'
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL #0 if (shift == 00)',
                  'LSL #12 if (shift == 01)'
                ]
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=1|10001|shift:2|imm12:12|Rn:5|Rd:5',
        'syntax' => 'SUBS <Xd>, <Xn|SP>, #<imm>{, <shift>}',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL #0 if (shift == 00)',
              'LSL #12 if (shift == 01)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Bitfield',
    'opcode' => 'sf|opc:2|100110|N|immr:6|imms:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'N=0|opc=00|sf=0',
        'aliases' => [
          {
            'conditions' => 'imms == 0b011111',
            'opcode' => 'sf=0|opc=00|100110|N=0|immr:6|imms=011111|Rn:5|Rd:5',
            'syntax' => 'ASR <Wd>, <Wn>, #<shift>',
            'variant' => '32-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'immr',
                'range' => '0 .. 31'
              }
            ]
          },
          {
            'conditions' => 'UInt(imms) < UInt(immr)',
            'opcode' => 'sf=0|opc=00|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'SBFIZ <Wd>, <Wn>, #<lsb>, #<width>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 31'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 32'
              }
            ]
          },
          {
            'conditions' => 'BFXPreferred(sf, opc<1>, imms, immr)',
            'opcode' => 'sf=0|opc=00|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'SBFX <Wd>, <Wn>, #<lsb>, #<width>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 31'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 32'
              }
            ]
          },
          {
            'conditions' => 'immr == 0b000000 && imms == 0b000111',
            'opcode' => 'sf=0|opc=00|100110|N=0|immr=000000|imms=000111|Rn:5|Rd:5',
            'syntax' => 'SXTB <Wd>, <Wn>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'immr == 0b000000 && imms == 0b001111',
            'opcode' => 'sf=0|opc=00|100110|N=0|immr=000000|imms=001111|Rn:5|Rd:5',
            'syntax' => 'SXTH <Wd>, <Wn>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=00|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'SBFM <Wd>, <Wn>, #<immr>, #<imms>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'immr',
            'field' => 'immr',
            'range' => '0 .. 31'
          },
          {
            'name' => 'imms',
            'field' => 'imms',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=01|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rn != 0b11111 && UInt(imms) < UInt(immr)',
            'opcode' => 'sf=0|opc=01|100110|N=0|immr:6|imms:6|Rn=11111|Rd:5',
            'syntax' => 'BFI <Wd>, <Wn>, #<lsb>, #<width>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 31'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 32'
              }
            ]
          },
          {
            'conditions' => 'UInt(imms) >= UInt(immr)',
            'opcode' => 'sf=0|opc=01|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'BFXIL <Wd>, <Wn>, #<lsb>, #<width>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 31'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 32'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=01|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'BFM <Wd>, <Wn>, #<immr>, #<imms>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'immr',
            'field' => 'immr',
            'range' => '0 .. 31'
          },
          {
            'name' => 'imms',
            'field' => 'imms',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=10|sf=0',
        'aliases' => [
          {
            'conditions' => 'imms != 0b011111 && imms + 1 == immr',
            'opcode' => 'sf=0|opc=10|100110|N=0|immr:6|imms!011111|Rn:5|Rd:5',
            'syntax' => 'LSL <Wd>, <Wn>, #<shift>',
            'variant' => '32-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'immr',
                'range' => '0 .. 31'
              }
            ]
          },
          {
            'conditions' => 'imms == 0b011111',
            'opcode' => 'sf=0|opc=10|100110|N=0|immr:6|imms=011111|Rn:5|Rd:5',
            'syntax' => 'LSR <Wd>, <Wn>, #<shift>',
            'variant' => '32-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'immr',
                'range' => '0 .. 31'
              }
            ]
          },
          {
            'conditions' => 'UInt(imms) < UInt(immr)',
            'opcode' => 'sf=0|opc=10|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'UBFIZ <Wd>, <Wn>, #<lsb>, #<width>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 31'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 32'
              }
            ]
          },
          {
            'conditions' => 'BFXPreferred(sf, opc<1>, imms, immr)',
            'opcode' => 'sf=0|opc=10|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'UBFX <Wd>, <Wn>, #<lsb>, #<width>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 31'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 32'
              }
            ]
          },
          {
            'conditions' => 'immr == 0b000000 && imms == 0b000111',
            'opcode' => 'sf=0|opc=10|100110|N=0|immr=000000|imms=000111|Rn:5|Rd:5',
            'syntax' => 'UXTB <Wd>, <Wn>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'immr == 0b000000 && imms == 0b001111',
            'opcode' => 'sf=0|opc=10|100110|N=0|immr=000000|imms=001111|Rn:5|Rd:5',
            'syntax' => 'UXTH <Wd>, <Wn>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=10|100110|N=0|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'UBFM <Wd>, <Wn>, #<immr>, #<imms>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'immr',
            'field' => 'immr',
            'range' => '0 .. 31'
          },
          {
            'name' => 'imms',
            'field' => 'imms',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'imms == 0b111111',
            'opcode' => 'sf=1|opc=00|100110|N=1|immr:6|imms=111111|Rn:5|Rd:5',
            'syntax' => 'ASR <Xd>, <Xn>, #<shift>',
            'variant' => '64-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'immr',
                'range' => '0 .. 63'
              }
            ]
          },
          {
            'conditions' => 'UInt(imms) < UInt(immr)',
            'opcode' => 'sf=1|opc=00|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'SBFIZ <Xd>, <Xn>, #<lsb>, #<width>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 63'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 64'
              }
            ]
          },
          {
            'conditions' => 'BFXPreferred(sf, opc<1>, imms, immr)',
            'opcode' => 'sf=1|opc=00|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'SBFX <Xd>, <Xn>, #<lsb>, #<width>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 63'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 64'
              }
            ]
          },
          {
            'conditions' => 'immr == 0b000000 && imms == 0b000111',
            'opcode' => 'sf=1|opc=00|100110|N=1|immr=000000|imms=000111|Rn:5|Rd:5',
            'syntax' => 'SXTB <Xd>, <Wn>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'immr == 0b000000 && imms == 0b001111',
            'opcode' => 'sf=1|opc=00|100110|N=1|immr=000000|imms=001111|Rn:5|Rd:5',
            'syntax' => 'SXTH <Xd>, <Wn>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'immr == 0b000000 && imms == 0b011111',
            'opcode' => 'sf=1|opc=00|100110|N=1|immr=000000|imms=011111|Rn:5|Rd:5',
            'syntax' => 'SXTW <Xd>, <Wn>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=00|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'SBFM <Xd>, <Xn>, #<immr>, #<imms>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'immr',
            'field' => 'immr',
            'range' => '0 .. 63'
          },
          {
            'name' => 'imms',
            'field' => 'imms',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=01|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rn != 0b11111 && UInt(imms) < UInt(immr)',
            'opcode' => 'sf=1|opc=01|100110|N=1|immr:6|imms:6|Rn=11111|Rd:5',
            'syntax' => 'BFI <Xd>, <Xn>, #<lsb>, #<width>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 63'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 64'
              }
            ]
          },
          {
            'conditions' => 'UInt(imms) >= UInt(immr)',
            'opcode' => 'sf=1|opc=01|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'BFXIL <Xd>, <Xn>, #<lsb>, #<width>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 63'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 64'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=01|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'BFM <Xd>, <Xn>, #<immr>, #<imms>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'immr',
            'field' => 'immr',
            'range' => '0 .. 63'
          },
          {
            'name' => 'imms',
            'field' => 'imms',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=10|sf=1',
        'aliases' => [
          {
            'conditions' => 'imms != 0b111111 && imms + 1 == immr',
            'opcode' => 'sf=1|opc=10|100110|N=1|immr:6|imms!111111|Rn:5|Rd:5',
            'syntax' => 'LSL <Xd>, <Xn>, #<shift>',
            'variant' => '64-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'immr',
                'range' => '0 .. 63'
              }
            ]
          },
          {
            'conditions' => 'imms == 0b111111',
            'opcode' => 'sf=1|opc=10|100110|N=1|immr:6|imms=111111|Rn:5|Rd:5',
            'syntax' => 'LSR <Xd>, <Xn>, #<shift>',
            'variant' => '64-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'immr',
                'range' => '0 .. 63'
              }
            ]
          },
          {
            'conditions' => 'UInt(imms) < UInt(immr)',
            'opcode' => 'sf=1|opc=10|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'UBFIZ <Xd>, <Xn>, #<lsb>, #<width>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 63'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 64'
              }
            ]
          },
          {
            'conditions' => 'BFXPreferred(sf, opc<1>, imms, immr)',
            'opcode' => 'sf=1|opc=10|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
            'syntax' => 'UBFX <Xd>, <Xn>, #<lsb>, #<width>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'lsb',
                'field' => 'immr',
                'range' => '0 .. 63'
              },
              {
                'name' => 'width',
                'field' => 'imms',
                'range' => '1 .. 64'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=10|100110|N=1|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'UBFM <Xd>, <Xn>, #<immr>, #<imms>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'immr',
            'field' => 'immr',
            'range' => '0 .. 63'
          },
          {
            'name' => 'imms',
            'field' => 'imms',
            'range' => '0 .. 63'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Extract',
    'opcode' => 'sf|op21:2|100111|N|o0|Rm:5|imms:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'imms=0xxxxx|o0=0|N=0|op21=00|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rn == Rm',
            'opcode' => 'sf=0|op21=00|100111|N=0|o0=0|Rm:5|imms=0xxxxx|Rn:5|Rd:5',
            'syntax' => 'ROR <Wd>, <Ws>, #<shift>',
            'variant' => '32-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Ws',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'imms',
                'range' => '0 .. 31'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op21=00|100111|N=0|o0=0|Rm:5|imms=0xxxxx|Rn:5|Rd:5',
        'syntax' => 'EXTR <Wd>, <Wn>, <Wm>, #<lsb>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'lsb',
            'field' => 'imms',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'o0=0|N=1|op21=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rn == Rm',
            'opcode' => 'sf=1|op21=00|100111|N=1|o0=0|Rm:5|imms:6|Rn:5|Rd:5',
            'syntax' => 'ROR <Xd>, <Xs>, #<shift>',
            'variant' => '64-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xs',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'imms',
                'range' => '0 .. 63'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op21=00|100111|N=1|o0=0|Rm:5|imms:6|Rn:5|Rd:5',
        'syntax' => 'EXTR <Xd>, <Xn>, <Xm>, #<lsb>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'lsb',
            'field' => 'imms',
            'range' => '0 .. 63'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Logical (immediate)',
    'opcode' => 'sf|opc:2|100100|N|immr:6|imms:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'N=0|opc=00|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=00|100100|N=0|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'AND <Wd|WSP>, <Wn>, #<imm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd|WSP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imms:immr',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'N=0|opc=01|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111 && ! MoveWidePreferred(sf, N, imms, immr)',
            'opcode' => 'sf=0|opc=01|100100|N=0|immr:6|imms:6|Rn=11111|Rd:5',
            'syntax' => 'MOV <Wd|WSP>, #<imm>',
            'variant' => '32-bit',
            'form' => 'bitmask immediate',
            'symbols' => [
              {
                'name' => 'Wd|WSP',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imms:immr',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=01|100100|N=0|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'ORR <Wd|WSP>, <Wn>, #<imm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd|WSP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imms:immr',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'N=0|opc=10|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=10|100100|N=0|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'EOR <Wd|WSP>, <Wn>, #<imm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd|WSP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imms:immr',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'N=0|opc=11|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|opc=11|100100|N=0|immr:6|imms:6|Rn:5|Rd=11111',
            'syntax' => 'TST <Wn>, #<imm>',
            'variant' => '32-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imms:immr',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=11|100100|N=0|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'ANDS <Wd>, <Wn>, #<imm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imms:immr',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=00|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=00|100100|N|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'AND <Xd|SP>, <Xn>, #<imm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd|SP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'N:imms:immr',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=01|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111 && ! MoveWidePreferred(sf, N, imms, immr)',
            'opcode' => 'sf=1|opc=01|100100|N|immr:6|imms:6|Rn=11111|Rd:5',
            'syntax' => 'MOV <Xd|SP>, #<imm>',
            'variant' => '64-bit',
            'form' => 'bitmask immediate',
            'symbols' => [
              {
                'name' => 'Xd|SP',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'N:imms:immr',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=01|100100|N|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'ORR <Xd|SP>, <Xn>, #<imm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd|SP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'N:imms:immr',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=10|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=10|100100|N|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'EOR <Xd|SP>, <Xn>, #<imm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd|SP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'N:imms:immr',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=11|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|opc=11|100100|N|immr:6|imms:6|Rn:5|Rd=11111',
            'syntax' => 'TST <Xn>, #<imm>',
            'variant' => '64-bit',
            'form' => 'immediate',
            'symbols' => [
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'N:imms:immr',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=11|100100|N|immr:6|imms:6|Rn:5|Rd:5',
        'syntax' => 'ANDS <Xd>, <Xn>, #<imm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'N:imms:immr',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Move wide (immediate)',
    'opcode' => 'sf|opc:2|100101|hw:2|imm16:16|Rd:5',
    'instructions' => [
      {
        'fields' => 'opc=00|sf=0',
        'aliases' => [
          {
            'conditions' => '! (IsZero(imm16) && hw != 0b00) && ! IsOnes(imm16)',
            'opcode' => 'sf=0|opc=00|100101|hw:2|imm16:16|Rd:5',
            'syntax' => 'MOV <Wd>, #<imm>',
            'variant' => '32-bit',
            'form' => 'inverted wide immediate',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm16:hw',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=00|100101|hw:2|imm16:16|Rd:5',
        'syntax' => 'MOVN <Wd>, #<imm>{, LSL #<shift>}',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          },
          {
            'name' => 'shift',
            'field' => 'hw * 16',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=10|sf=0',
        'aliases' => [
          {
            'conditions' => '! (IsZero(imm16) && hw != 0b00)',
            'opcode' => 'sf=0|opc=10|100101|hw:2|imm16:16|Rd:5',
            'syntax' => 'MOV <Wd>, #<imm>',
            'variant' => '32-bit',
            'form' => 'wide immediate',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm16:hw',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=10|100101|hw:2|imm16:16|Rd:5',
        'syntax' => 'MOVZ <Wd>, #<imm>{, LSL #<shift>}',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          },
          {
            'name' => 'shift',
            'field' => 'hw * 16',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=11|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=11|100101|hw:2|imm16:16|Rd:5',
        'syntax' => 'MOVK <Wd>, #<imm>{, LSL #<shift>}',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          },
          {
            'name' => 'shift',
            'field' => 'hw * 16',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=00|sf=1',
        'aliases' => [
          {
            'conditions' => '! (IsZero(imm16) && hw != 0b00)',
            'opcode' => 'sf=1|opc=00|100101|hw:2|imm16:16|Rd:5',
            'syntax' => 'MOV <Xd>, #<imm>',
            'variant' => '64-bit',
            'form' => 'inverted wide immediate',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm16:hw',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=00|100101|hw:2|imm16:16|Rd:5',
        'syntax' => 'MOVN <Xd>, #<imm>{, LSL #<shift>}',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          },
          {
            'name' => 'shift',
            'field' => 'hw * 16',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=10|sf=1',
        'aliases' => [
          {
            'conditions' => '! (IsZero(imm16) && hw != 0b00)',
            'opcode' => 'sf=1|opc=10|100101|hw:2|imm16:16|Rd:5',
            'syntax' => 'MOV <Xd>, #<imm>',
            'variant' => '64-bit',
            'form' => 'wide immediate',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'imm',
                'field' => 'imm16:hw',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=10|100101|hw:2|imm16:16|Rd:5',
        'syntax' => 'MOVZ <Xd>, #<imm>{, LSL #<shift>}',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          },
          {
            'name' => 'shift',
            'field' => 'hw * 16',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=11|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=11|100101|hw:2|imm16:16|Rd:5',
        'syntax' => 'MOVK <Xd>, #<imm>{, LSL #<shift>}',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          },
          {
            'name' => 'shift',
            'field' => 'hw * 16',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'PC-rel. addressing',
    'opcode' => 'op|immlo:2|10000|immhi:19|Rd:5',
    'instructions' => [
      {
        'fields' => 'op=0',
        'aliases' => undef,
        'opcode' => 'op=0|immlo:2|10000|immhi:19|Rd:5',
        'syntax' => 'ADR <Xd>, <label>',
        'variant' => 'Literal',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'immhi:immlo',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'op=1',
        'aliases' => undef,
        'opcode' => 'op=1|immlo:2|10000|immhi:19|Rd:5',
        'syntax' => 'ADRP <Xd>, <label>',
        'variant' => 'Literal',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'immhi:immlo * 4096',
            'range' => '+/-4GB'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Branches, exception generating and system instructions',
    'opcode' => 'op0:3|101|op1:4|xxxxxxxxxxxxxxxxxxxxxx',
    'instructions' => [
      {
        'fields' => 'op1=0xxx|op0=010',
        'group' => 'Conditional branch (immediate)'
      },
      {
        'fields' => 'op1=00xx|op0=110',
        'group' => 'Exception generation'
      },
      {
        'fields' => 'op1=0100|op0=110',
        'group' => 'System'
      },
      {
        'fields' => 'op1=1xxx|op0=110',
        'group' => 'Unconditional branch (register)'
      },
      {
        'fields' => 'op0=x00',
        'group' => 'Unconditional branch (immediate)'
      },
      {
        'fields' => 'op1=0xxx|op0=x01',
        'group' => 'Compare & branch (immediate)'
      },
      {
        'fields' => 'op1=1xxx|op0=x01',
        'group' => 'Test & branch (immediate)'
      }
    ]
  },
  {
    'name' => 'Compare & branch (immediate)',
    'opcode' => 'sf|011010|op|imm19:19|Rt:5',
    'instructions' => [
      {
        'fields' => 'op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|011010|op=0|imm19:19|Rt:5',
        'syntax' => 'CBZ <Wt>, <label>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'op=1|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|011010|op=1|imm19:19|Rt:5',
        'syntax' => 'CBNZ <Wt>, <label>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|011010|op=0|imm19:19|Rt:5',
        'syntax' => 'CBZ <Xt>, <label>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'op=1|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|011010|op=1|imm19:19|Rt:5',
        'syntax' => 'CBNZ <Xt>, <label>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Conditional branch (immediate)',
    'opcode' => '0101010|o1|imm19:19|o0|cond:4',
    'instructions' => [
      {
        'fields' => 'o0=0|o1=0',
        'aliases' => undef,
        'opcode' => '0101010|o1=0|imm19:19|o0=0|cond:4',
        'syntax' => 'B.<cond> <label>',
        'variant' => '19-bit signed PC-relative branch offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Exception generation',
    'opcode' => '11010100|opc:3|imm16:16|op2:3|LL:2',
    'instructions' => [
      {
        'fields' => 'LL=01|op2=000|opc=000',
        'aliases' => undef,
        'opcode' => '11010100|opc=000|imm16:16|op2=000|LL=01',
        'syntax' => 'SVC #<imm>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      },
      {
        'fields' => 'LL=10|op2=000|opc=000',
        'aliases' => undef,
        'opcode' => '11010100|opc=000|imm16:16|op2=000|LL=10',
        'syntax' => 'HVC #<imm>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      },
      {
        'fields' => 'LL=11|op2=000|opc=000',
        'aliases' => undef,
        'opcode' => '11010100|opc=000|imm16:16|op2=000|LL=11',
        'syntax' => 'SMC #<imm>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      },
      {
        'fields' => 'LL=00|op2=000|opc=001',
        'aliases' => undef,
        'opcode' => '11010100|opc=001|imm16:16|op2=000|LL=00',
        'syntax' => 'BRK #<imm>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      },
      {
        'fields' => 'LL=00|op2=000|opc=010',
        'aliases' => undef,
        'opcode' => '11010100|opc=010|imm16:16|op2=000|LL=00',
        'syntax' => 'HLT #<imm>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      },
      {
        'fields' => 'LL=01|op2=000|opc=101',
        'aliases' => undef,
        'opcode' => '11010100|opc=101|imm16:16|op2=000|LL=01',
        'syntax' => 'DCPS1 {#<imm>}',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      },
      {
        'fields' => 'LL=10|op2=000|opc=101',
        'aliases' => undef,
        'opcode' => '11010100|opc=101|imm16:16|op2=000|LL=10',
        'syntax' => 'DCPS2 {#<imm>}',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      },
      {
        'fields' => 'LL=11|op2=000|opc=101',
        'aliases' => undef,
        'opcode' => '11010100|opc=101|imm16:16|op2=000|LL=11',
        'syntax' => 'DCPS3 {#<imm>}',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'imm16',
            'range' => '0 .. 65535'
          }
        ]
      }
    ]
  },
  {
    'name' => 'System',
    'opcode' => '1101010100|L|op0:2|op1:3|CRn:4|CRm:4|op2:3|Rt:5',
    'instructions' => [
      {
        'fields' => 'Rt=11111|CRn=0100|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1:3|CRn=0100|CRm:4|op2:3|Rt=11111',
        'syntax' => 'MSR <pstatefield>, #<imm>',
        'variant' => 'System',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'pstatefield',
            'field' => 'op1:op2',
            'range' => '',
            'values' => [
              'SPSel if (op1 == 000 && op2 == 101)',
              'DAIFSet if (op1 == 011 && op2 == 110)',
              'DAIFClr if (op1 == 011 && op2 == 111)'
            ]
          },
          {
            'name' => 'imm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          }
        ]
      },
      {
        'fields' => 'Rt=11111|CRm!0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm!0000|op2:3|Rt=11111',
        'syntax' => 'HINT #<imm>',
        'variant' => 'Hints 8 to 127',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'CRm:op2',
            'range' => '0 .. 127'
          }
        ]
      },
      {
        'fields' => 'Rt=11111|op2=000|CRm=0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm=0000|op2=000|Rt=11111',
        'syntax' => 'NOP',
        'variant' => 'System',
        'form' => ''
      },
      {
        'fields' => 'Rt=11111|op2=001|CRm=0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm=0000|op2=001|Rt=11111',
        'syntax' => 'YIELD',
        'variant' => 'System',
        'form' => ''
      },
      {
        'fields' => 'Rt=11111|op2=010|CRm=0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm=0000|op2=010|Rt=11111',
        'syntax' => 'WFE',
        'variant' => 'System',
        'form' => ''
      },
      {
        'fields' => 'Rt=11111|op2=011|CRm=0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm=0000|op2=011|Rt=11111',
        'syntax' => 'WFI',
        'variant' => 'System',
        'form' => ''
      },
      {
        'fields' => 'Rt=11111|op2=100|CRm=0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm=0000|op2=100|Rt=11111',
        'syntax' => 'SEV',
        'variant' => 'System',
        'form' => ''
      },
      {
        'fields' => 'Rt=11111|op2=101|CRm=0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm=0000|op2=101|Rt=11111',
        'syntax' => 'SEVL',
        'variant' => 'System',
        'form' => ''
      },
      {
        'fields' => 'Rt=11111|op2=11x|CRm=0000|CRn=0010|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0010|CRm=0000|op2=11x|Rt=11111',
        'syntax' => 'HINT #<imm>',
        'variant' => 'Hints 6 and 7',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'CRm:op2',
            'range' => '0 .. 127'
          }
        ]
      },
      {
        'fields' => 'Rt=11111|op2=010|CRn=0011|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0011|CRm:4|op2=010|Rt=11111',
        'syntax' => 'CLREX {#<imm>}',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'imm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          }
        ]
      },
      {
        'fields' => 'Rt=11111|op2=100|CRn=0011|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0011|CRm:4|op2=100|Rt=11111',
        'syntax' => 'DSB <option>|#<imm>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'option',
            'field' => 'CRm',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          }
        ]
      },
      {
        'fields' => 'Rt=11111|op2=101|CRn=0011|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0011|CRm:4|op2=101|Rt=11111',
        'syntax' => 'DMB <option>|#<imm>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'option',
            'field' => 'CRm',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          }
        ]
      },
      {
        'fields' => 'Rt=11111|op2=110|CRn=0011|op1=011|op0=00|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|op0=00|op1=011|CRn=0011|CRm:4|op2=110|Rt=11111',
        'syntax' => 'ISB {<option>|#<imm>}',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'option',
            'field' => 'CRm',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          }
        ]
      },
      {
        'fields' => 'op0=01|L=0',
        'aliases' => [
          {
            'conditions' => 'CRn == 0b0111 && CRm == 0b100x && SysOp(op1,0b0111,CRm,op2) == Sys_AT',
            'opcode' => '1101010100|L=0|op0=01|op1:3|CRn=0111|CRm=100x|op2:3|Rt:5',
            'syntax' => 'AT <at_op>, <Xt>',
            'variant' => 'System',
            'form' => '',
            'symbols' => [
              {
                'name' => 'at_op',
                'field' => 'op1:CRm<0>:op2',
                'range' => '',
                'values' => [
                  'S1E1R if (op1 == 000 && CRm<0> == 0 && op2 == 000)',
                  'S1E1W if (op1 == 000 && CRm<0> == 0 && op2 == 001)',
                  'S1E0R if (op1 == 000 && CRm<0> == 0 && op2 == 010)',
                  'S1E0W if (op1 == 000 && CRm<0> == 0 && op2 == 011)',
                  'S1E2R if (op1 == 100 && CRm<0> == 0 && op2 == 000)',
                  'S1E2W if (op1 == 100 && CRm<0> == 0 && op2 == 001)',
                  'S12E1R if (op1 == 100 && CRm<0> == 0 && op2 == 100)',
                  'S12E1W if (op1 == 100 && CRm<0> == 0 && op2 == 101)',
                  'S12E0R if (op1 == 100 && CRm<0> == 0 && op2 == 110)',
                  'S12E0W if (op1 == 100 && CRm<0> == 0 && op2 == 111)',
                  'S1E3R if (op1 == 110 && CRm<0> == 0 && op2 == 000)',
                  'S1E3W if (op1 == 110 && CRm<0> == 0 && op2 == 001)'
                ]
              },
              {
                'name' => 'Xt',
                'field' => 'Rt',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'CRn == 0b0111 && SysOp(op1,0b0111,CRm,op2) == Sys_DC',
            'opcode' => '1101010100|L=0|op0=01|op1:3|CRn=0111|CRm:4|op2:3|Rt:5',
            'syntax' => 'DC <dc_op>, <Xt>',
            'variant' => 'System',
            'form' => '',
            'symbols' => [
              {
                'name' => 'dc_op',
                'field' => 'op1:CRm:op2',
                'range' => '',
                'values' => [
                  'IVAC if (op1 == 000 && CRm == 0110 && op2 == 001)',
                  'ISW if (op1 == 000 && CRm == 0110 && op2 == 010)',
                  'CSW if (op1 == 000 && CRm == 1010 && op2 == 010)',
                  'CISW if (op1 == 000 && CRm == 1110 && op2 == 010)',
                  'ZVA if (op1 == 011 && CRm == 0100 && op2 == 001)',
                  'CVAC if (op1 == 011 && CRm == 1010 && op2 == 001)',
                  'CVAU if (op1 == 011 && CRm == 1011 && op2 == 001)',
                  'CIVAC if (op1 == 011 && CRm == 1110 && op2 == 001)'
                ]
              },
              {
                'name' => 'Xt',
                'field' => 'Rt',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'CRn == 0b0111 && SysOp(op1,0b0111,CRm,op2) == Sys_IC',
            'opcode' => '1101010100|L=0|op0=01|op1:3|CRn=0111|CRm:4|op2:3|Rt:5',
            'syntax' => 'IC <ic_op>{, <Xt>}',
            'variant' => 'System',
            'form' => '',
            'symbols' => [
              {
                'name' => 'ic_op',
                'field' => 'op1:CRm:op2',
                'range' => '',
                'values' => [
                  'IALLUIS if (op1 == 000 && CRm == 0001 && op2 == 000)',
                  'IALLU if (op1 == 000 && CRm == 0101 && op2 == 000)',
                  'IVAU if (op1 == 011 && CRm == 0101 && op2 == 001)'
                ]
              },
              {
                'name' => 'Xt',
                'field' => 'Rt',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'CRn == 0b1000 && SysOp(op1,0b1000,CRm,op2) == Sys_TLBI',
            'opcode' => '1101010100|L=0|op0=01|op1:3|CRn=1000|CRm:4|op2:3|Rt:5',
            'syntax' => 'TLBI <tlbi_op>{, <Xt>}',
            'variant' => 'System',
            'form' => '',
            'symbols' => [
              {
                'name' => 'tlbi_op',
                'field' => 'op1:CRm:op2',
                'range' => '',
                'values' => [
                  'VMALLE1IS if (op1 == 000 && CRm == 0011 && op2 == 000)',
                  'VAE1IS if (op1 == 000 && CRm == 0011 && op2 == 001)',
                  'ASIDE1IS if (op1 == 000 && CRm == 0011 && op2 == 010)',
                  'VAAE1IS if (op1 == 000 && CRm == 0011 && op2 == 011)',
                  'VALE1IS if (op1 == 000 && CRm == 0011 && op2 == 101)',
                  'VAALE1IS if (op1 == 000 && CRm == 0011 && op2 == 111)',
                  'VMALLE1 if (op1 == 000 && CRm == 0111 && op2 == 000)',
                  'VAE1 if (op1 == 000 && CRm == 0111 && op2 == 001)',
                  'ASIDE1 if (op1 == 000 && CRm == 0111 && op2 == 010)',
                  'VAAE1 if (op1 == 000 && CRm == 0111 && op2 == 011)',
                  'VALE1 if (op1 == 000 && CRm == 0111 && op2 == 101)',
                  'VAALE1 if (op1 == 000 && CRm == 0111 && op2 == 111)',
                  'IPAS2E1IS if (op1 == 100 && CRm == 0000 && op2 == 001)',
                  'IPAS2LE1IS if (op1 == 100 && CRm == 0000 && op2 == 101)',
                  'ALLE2IS if (op1 == 100 && CRm == 0011 && op2 == 000)',
                  'VAE2IS if (op1 == 100 && CRm == 0011 && op2 == 001)',
                  'ALLE1IS if (op1 == 100 && CRm == 0011 && op2 == 100)',
                  'VALE2IS if (op1 == 100 && CRm == 0011 && op2 == 101)',
                  'IPAS2E1 if (op1 == 100 && CRm == 0100 && op2 == 001)',
                  'IPAS2LE1 if (op1 == 100 && CRm == 0100 && op2 == 101)',
                  'ALLE2 if (op1 == 100 && CRm == 0111 && op2 == 000)',
                  'VAE2 if (op1 == 100 && CRm == 0111 && op2 == 001)',
                  'ALLE1 if (op1 == 100 && CRm == 0111 && op2 == 100)',
                  'VALE2 if (op1 == 100 && CRm == 0111 && op2 == 101)',
                  'VMALLS12E1 if (op1 == 100 && CRm == 0111 && op2 == 110)',
                  'ALLE3IS if (op1 == 110 && CRm == 0011 && op2 == 000)',
                  'VAE3IS if (op1 == 110 && CRm == 0011 && op2 == 001)',
                  'VALE3IS if (op1 == 110 && CRm == 0011 && op2 == 101)',
                  'ALLE3 if (op1 == 110 && CRm == 0111 && op2 == 000)',
                  'VAE3 if (op1 == 110 && CRm == 0111 && op2 == 001)',
                  'VALE3 if (op1 == 110 && CRm == 0111 && op2 == 101)'
                ]
              },
              {
                'name' => 'Xt',
                'field' => 'Rt',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => '1101010100|L=0|op0=01|op1:3|CRn:4|CRm:4|op2:3|Rt:5',
        'syntax' => 'SYS #<op1>, <Cn>, <Cm>, #<op2>{, <Xt>}',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'op1',
            'field' => 'op1',
            'range' => '0 .. 7'
          },
          {
            'name' => 'Cn',
            'field' => 'CRn',
            'range' => '0 .. 15'
          },
          {
            'name' => 'Cm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          },
          {
            'name' => 'op2',
            'field' => 'op2',
            'range' => '0 .. 7'
          },
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op0=1x|L=0',
        'aliases' => undef,
        'opcode' => '1101010100|L=0|1|o0|op1:3|CRn:4|CRm:4|op2:3|Rt:5',
        'syntax' => 'MSR (<systemreg>|S<op0>_<op1>_<Cn>_<Cm>_<op2>), <Xt>',
        'variant' => 'System',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'systemreg',
            'field' => 'o0:op1:CRn:CRm:op2',
            'range' => ''
          },
          {
            'name' => 'op0',
            'field' => 'o0',
            'range' => '',
            'values' => [
              '2 if (o0 == 0)',
              '3 if (o0 == 1)'
            ]
          },
          {
            'name' => 'op1',
            'field' => 'op1',
            'range' => '0 .. 7'
          },
          {
            'name' => 'Cn',
            'field' => 'CRn',
            'range' => '0 .. 15'
          },
          {
            'name' => 'Cm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          },
          {
            'name' => 'op2',
            'field' => 'op2',
            'range' => '0 .. 7'
          },
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op0=01|L=1',
        'aliases' => undef,
        'opcode' => '1101010100|L=1|op0=01|op1:3|CRn:4|CRm:4|op2:3|Rt:5',
        'syntax' => 'SYSL <Xt>, #<op1>, <Cn>, <Cm>, #<op2>',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'op1',
            'field' => 'op1',
            'range' => '0 .. 7'
          },
          {
            'name' => 'Cn',
            'field' => 'CRn',
            'range' => '0 .. 15'
          },
          {
            'name' => 'Cm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          },
          {
            'name' => 'op2',
            'field' => 'op2',
            'range' => '0 .. 7'
          }
        ]
      },
      {
        'fields' => 'op0=1x|L=1',
        'aliases' => undef,
        'opcode' => '1101010100|L=1|1|o0|op1:3|CRn:4|CRm:4|op2:3|Rt:5',
        'syntax' => 'MRS <Xt>, (<systemreg>|S<op0>_<op1>_<Cn>_<Cm>_<op2>)',
        'variant' => 'System',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'systemreg',
            'field' => 'o0:op1:CRn:CRm:op2',
            'range' => ''
          },
          {
            'name' => 'op0',
            'field' => 'o0',
            'range' => '',
            'values' => [
              '2 if (o0 == 0)',
              '3 if (o0 == 1)'
            ]
          },
          {
            'name' => 'op1',
            'field' => 'op1',
            'range' => '0 .. 7'
          },
          {
            'name' => 'Cn',
            'field' => 'CRn',
            'range' => '0 .. 15'
          },
          {
            'name' => 'Cm',
            'field' => 'CRm',
            'range' => '0 .. 15'
          },
          {
            'name' => 'op2',
            'field' => 'op2',
            'range' => '0 .. 7'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Test & branch (immediate)',
    'opcode' => 'b5|011011|op|b40:5|imm14:14|Rt:5',
    'instructions' => [
      {
        'fields' => 'op=0',
        'aliases' => undef,
        'opcode' => 'b5|011011|op=0|b40:5|imm14:14|Rt:5',
        'syntax' => 'TBZ <R><t>, #<imm>, <label>',
        'variant' => '14-bit signed PC-relative branch offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'R',
            'field' => 'b5',
            'range' => '',
            'values' => [
              'W if (b5 == 0)',
              'X if (b5 == 1)'
            ]
          },
          {
            'name' => 't',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'b5:b40',
            'range' => '0 .. 63'
          },
          {
            'name' => 'label',
            'field' => 'imm14 * 4',
            'range' => '+/-32KB'
          }
        ]
      },
      {
        'fields' => 'op=1',
        'aliases' => undef,
        'opcode' => 'b5|011011|op=1|b40:5|imm14:14|Rt:5',
        'syntax' => 'TBNZ <R><t>, #<imm>, <label>',
        'variant' => '14-bit signed PC-relative branch offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'R',
            'field' => 'b5',
            'range' => '',
            'values' => [
              'W if (b5 == 0)',
              'X if (b5 == 1)'
            ]
          },
          {
            'name' => 't',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'b5:b40',
            'range' => '0 .. 63'
          },
          {
            'name' => 'label',
            'field' => 'imm14 * 4',
            'range' => '+/-32KB'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Unconditional branch (immediate)',
    'opcode' => 'op|00101|imm26:26',
    'instructions' => [
      {
        'fields' => 'op=0',
        'aliases' => undef,
        'opcode' => 'op=0|00101|imm26:26',
        'syntax' => 'B <label>',
        'variant' => '26-bit signed PC-relative branch offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'label',
            'field' => 'imm26 * 4',
            'range' => '+/-128MB'
          }
        ]
      },
      {
        'fields' => 'op=1',
        'aliases' => undef,
        'opcode' => 'op=1|00101|imm26:26',
        'syntax' => 'BL <label>',
        'variant' => '26-bit signed PC-relative branch offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'label',
            'field' => 'imm26 * 4',
            'range' => '+/-128MB'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Unconditional branch (register)',
    'opcode' => '1101011|opc:4|op2:5|op3:6|Rn:5|op4:5',
    'instructions' => [
      {
        'fields' => 'op4=00000|op3=000000|op2=11111|opc=0000',
        'aliases' => undef,
        'opcode' => '1101011|opc=0000|op2=11111|op3=000000|Rn:5|op4=00000',
        'syntax' => 'BR <Xn>',
        'variant' => 'Integer',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op4=00000|op3=000000|op2=11111|opc=0001',
        'aliases' => undef,
        'opcode' => '1101011|opc=0001|op2=11111|op3=000000|Rn:5|op4=00000',
        'syntax' => 'BLR <Xn>',
        'variant' => 'Integer',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op4=00000|op3=000000|op2=11111|opc=0010',
        'aliases' => undef,
        'opcode' => '1101011|opc=0010|op2=11111|op3=000000|Rn:5|op4=00000',
        'syntax' => 'RET {<Xn>}',
        'variant' => 'Integer',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op4=00000|Rn=11111|op3=000000|op2=11111|opc=0100',
        'aliases' => undef,
        'opcode' => '1101011|opc=0100|op2=11111|op3=000000|Rn=11111|op4=00000',
        'syntax' => 'ERET',
        'variant' => 'System',
        'form' => ''
      },
      {
        'fields' => 'op4=00000|Rn=11111|op3=000000|op2=11111|opc=0101',
        'aliases' => undef,
        'opcode' => '1101011|opc=0101|op2=11111|op3=000000|Rn=11111|op4=00000',
        'syntax' => 'DRPS',
        'variant' => 'System',
        'form' => ''
      }
    ]
  },
  {
    'name' => 'Loads and stores',
    'opcode' => 'op0|x|op1:2|1|op2|0|op3:2|x|op4:6|xxxx|op5:2|xxxxxxxxxx',
    'instructions' => [
      {
        'fields' => 'op4=000000|op3=00|op2=1|op1=00|op0=0',
        'group' => 'Advanced SIMD load/store multiple structures'
      },
      {
        'fields' => 'op4=0xxxxx|op3=01|op2=1|op1=00|op0=0',
        'group' => 'Advanced SIMD load/store multip le structures (post-indexed)'
      },
      {
        'fields' => 'op4=x00000|op3=10|op2=1|op1=00|op0=0',
        'group' => 'Advanced SIMD load/store single structure'
      },
      {
        'fields' => 'op3=11|op2=1|op1=00|op0=0',
        'group' => 'Advanced SIMD load/store single structure (post-indexed)'
      },
      {
        'fields' => 'op3=0x|op2=0|op1=00',
        'group' => 'Load/store exclusive'
      },
      {
        'fields' => 'op3=0x|op1=01',
        'group' => 'Load register (literal)'
      },
      {
        'fields' => 'op3=00|op1=10',
        'group' => 'Load/store no-allocate pair (offset)'
      },
      {
        'fields' => 'op3=01|op1=10',
        'group' => 'Load/store register pair (post-indexed)'
      },
      {
        'fields' => 'op3=10|op1=10',
        'group' => 'Load/store register pair (offset)'
      },
      {
        'fields' => 'op3=11|op1=10',
        'group' => 'Load/store register pair (pre-indexed)'
      },
      {
        'fields' => 'op5=00|op4=0xxxxx|op3=0x|op1=11',
        'group' => 'Load/store register (unscaled immediate)'
      },
      {
        'fields' => 'op5=01|op4=0xxxxx|op3=0x|op1=11',
        'group' => 'Load/store register (immediate post-indexed)'
      },
      {
        'fields' => 'op5=10|op4=0xxxxx|op3=0x|op1=11',
        'group' => 'Load/store register (unprivileged)'
      },
      {
        'fields' => 'op5=11|op4=0xxxxx|op3=0x|op1=11',
        'group' => 'Load/store register (immediate pre-indexed)'
      },
      {
        'fields' => 'op5=10|op4=1xxxxx|op3=0x|op1=11',
        'group' => 'Load/store register (register offset)'
      },
      {
        'fields' => 'op3=1x|op1=11',
        'group' => 'Load/store register (unsigned immediate)'
      }
    ]
  },
  {
    'name' => 'Advanced SIMD load/store multiple structures',
    'opcode' => '0|Q|0011000|L|000000|opcode:4|size:2|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opcode=0000|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=0|000000|opcode=0000|size:2|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0010|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=0|000000|opcode=0010|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]',
        'variant' => 'Four registers',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0100|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=0|000000|opcode=0100|size:2|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=0|000000|opcode=0110|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]',
        'variant' => 'Three registers',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=0|000000|opcode=0111|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T> }, [<Xn|SP>]',
        'variant' => 'One register',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=0|000000|opcode=1000|size:2|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1010|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=0|000000|opcode=1010|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]',
        'variant' => 'Two registers',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0000|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=1|000000|opcode=0000|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0010|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=1|000000|opcode=0010|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]',
        'variant' => 'Four registers',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0100|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=1|000000|opcode=0100|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=1|000000|opcode=0110|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]',
        'variant' => 'Three registers',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=1|000000|opcode=0111|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T> }, [<Xn|SP>]',
        'variant' => 'One register',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=1|000000|opcode=1000|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1010|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011000|L=1|000000|opcode=1010|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]',
        'variant' => 'Two registers',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD load/store multiple structures (post-indexed)',
    'opcode' => '0|Q|0011001|L|0|Rm:5|opcode:4|size:2|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opcode=0000|Rm!11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm!11111|opcode=0000|size:2|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0010|Rm!11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm!11111|opcode=0010|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Four registers|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0100|Rm!11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm!11111|opcode=0100|size:2|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|Rm!11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm!11111|opcode=0110|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Three registers|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|Rm!11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm!11111|opcode=0111|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'One register|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|Rm!11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm!11111|opcode=1000|size:2|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1010|Rm!11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm!11111|opcode=1010|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Two registers|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0000|Rm=11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm=11111|opcode=0000|size:2|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#32 if (Q == 0)',
              '#64 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0010|Rm=11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm=11111|opcode=0010|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Four registers|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#32 if (Q == 0)',
              '#64 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0100|Rm=11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm=11111|opcode=0100|size:2|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#24 if (Q == 0)',
              '#48 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0110|Rm=11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm=11111|opcode=0110|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Three registers|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#24 if (Q == 0)',
              '#48 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0111|Rm=11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm=11111|opcode=0111|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'One register|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#8 if (Q == 0)',
              '#16 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1000|Rm=11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm=11111|opcode=1000|size:2|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#16 if (Q == 0)',
              '#32 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1010|Rm=11111|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=0|0|Rm=11111|opcode=1010|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Two registers|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#16 if (Q == 0)',
              '#32 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0000|Rm!11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm!11111|opcode=0000|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0010|Rm!11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm!11111|opcode=0010|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Four registers|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0100|Rm!11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm!11111|opcode=0100|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|Rm!11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm!11111|opcode=0110|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Three registers|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|Rm!11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm!11111|opcode=0111|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'One register|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|Rm!11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm!11111|opcode=1000|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1010|Rm!11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm!11111|opcode=1010|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Two registers|register offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0000|Rm=11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm=11111|opcode=0000|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#32 if (Q == 0)',
              '#64 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0010|Rm=11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm=11111|opcode=0010|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Four registers|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#32 if (Q == 0)',
              '#64 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0100|Rm=11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm=11111|opcode=0100|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#24 if (Q == 0)',
              '#48 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0110|Rm=11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm=11111|opcode=0110|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Three registers|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#24 if (Q == 0)',
              '#48 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0111|Rm=11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm=11111|opcode=0111|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'One register|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#8 if (Q == 0)',
              '#16 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1000|Rm=11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm=11111|opcode=1000|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#16 if (Q == 0)',
              '#32 if (Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1010|Rm=11111|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011001|L=1|0|Rm=11111|opcode=1010|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Two registers|immediate offset',
        'form' => 'multiple structures',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '#16 if (Q == 0)',
              '#32 if (Q == 1)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD load/store single structure',
    'opcode' => '0|Q|0011010|L|R|00000|opcode:3|S|size:2|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opcode=000|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=0|00000|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=0|R=1|00000|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=110|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=110|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1R { <Vt>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=0|00000|opcode=111|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3R { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>]',
        'variant' => '8-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>]',
        'variant' => '16-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>]',
        'variant' => '32-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>]',
        'variant' => '64-bit',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=110|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=110|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2R { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011010|L=1|R=1|00000|opcode=111|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4R { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD load/store single structure (post-indexed)',
    'opcode' => '0|Q|0011011|L|R|Rm:5|opcode:3|S|size:2|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opcode=000|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm!11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm!11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.B }[<index>], [<Xn|SP>], #1',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], #3',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.H }[<index>], [<Xn|SP>], #2',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], #6',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.S }[<index>], [<Xn|SP>], #4',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST1 { <Vt>.D }[<index>], [<Xn|SP>], #8',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], #12',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm=11111|R=0|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=0|Rm=11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST3 { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], #24',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm!11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm!11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], #2',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], #4',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], #4',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], #8',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], #8',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST2 { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], #16',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], #16',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm=11111|R=1|L=0',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=0|R=1|Rm=11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'ST4 { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], #32',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=110|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=110|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1R { <Vt>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=111|Rm!11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm!11111|opcode=111|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3R { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.B }[<index>], [<Xn|SP>], #1',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.B, <Vt2>.B, <Vt3>.B }[<index>], [<Xn|SP>], #3',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.H }[<index>], [<Xn|SP>], #2',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.H, <Vt2>.H, <Vt3>.H }[<index>], [<Xn|SP>], #6',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.S }[<index>], [<Xn|SP>], #4',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD1 { <Vt>.D }[<index>], [<Xn|SP>], #8',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.S, <Vt2>.S, <Vt3>.S }[<index>], [<Xn|SP>], #12',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD3 { <Vt>.D, <Vt2>.D, <Vt3>.D }[<index>], [<Xn|SP>], #24',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=110|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=110|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD1R { <Vt>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'size',
            'range' => '',
            'values' => [
              '#1 if (size == 00)',
              '#2 if (size == 01)',
              '#4 if (size == 10)',
              '#8 if (size == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=111|Rm=11111|R=0|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=0|Rm=11111|opcode=111|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD3R { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'size',
            'range' => '',
            'values' => [
              '#3 if (size == 00)',
              '#6 if (size == 01)',
              '#12 if (size == 10)',
              '#24 if (size == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=000|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '8-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '16-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '32-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], <Xm>',
        'variant' => '64-bit|register offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=110|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=110|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2R { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=111|Rm!11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm!11111|opcode=111|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4R { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <Xm>',
        'variant' => 'Register offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=000|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.B, <Vt2>.B }[<index>], [<Xn|SP>], #2',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=001|S|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.B, <Vt2>.B, <Vt3>.B, <Vt4>.B }[<index>], [<Xn|SP>], #4',
        'variant' => '8-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=010|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=010|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.H, <Vt2>.H }[<index>], [<Xn|SP>], #4',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=x0|opcode=011|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=011|S|size=x0|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.H, <Vt2>.H, <Vt3>.H, <Vt4>.H }[<index>], [<Xn|SP>], #8',
        'variant' => '16-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S:size<1>',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=100|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=100|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.S, <Vt2>.S }[<index>], [<Xn|SP>], #8',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=100|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=100|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD2 { <Vt>.D, <Vt2>.D }[<index>], [<Xn|SP>], #16',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=00|opcode=101|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=101|S|size=00|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.S, <Vt2>.S, <Vt3>.S, <Vt4>.S }[<index>], [<Xn|SP>], #16',
        'variant' => '32-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:S',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'size=01|S=0|opcode=101|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=101|S=0|size=01|Rn:5|Rt:5',
        'syntax' => 'LD4 { <Vt>.D, <Vt2>.D, <Vt3>.D, <Vt4>.D }[<index>], [<Xn|SP>], #32',
        'variant' => '64-bit|immediate offset',
        'form' => 'single structure',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=110|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=110|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD2R { <Vt>.<T>, <Vt2>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'size',
            'range' => '',
            'values' => [
              '#2 if (size == 00)',
              '#4 if (size == 01)',
              '#8 if (size == 10)',
              '#16 if (size == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'S=0|opcode=111|Rm=11111|R=1|L=1',
        'aliases' => undef,
        'opcode' => '0|Q|0011011|L=1|R=1|Rm=11111|opcode=111|S=0|size:2|Rn:5|Rt:5',
        'syntax' => 'LD4R { <Vt>.<T>, <Vt2>.<T>, <Vt3>.<T>, <Vt4>.<T> }, [<Xn|SP>], <imm>',
        'variant' => 'Immediate offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vt2',
            'field' => '(Rt + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt3',
            'field' => '(Rt + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vt4',
            'field' => '(Rt + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'size',
            'range' => '',
            'values' => [
              '#4 if (size == 00)',
              '#8 if (size == 01)',
              '#16 if (size == 10)',
              '#32 if (size == 11)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load register (literal)',
    'opcode' => 'opc:2|011|V|00|imm19:19|Rt:5',
    'instructions' => [
      {
        'fields' => 'V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|011|V=0|00|imm19:19|Rt:5',
        'syntax' => 'LDR <Wt>, <label>',
        'variant' => '32-bit',
        'form' => 'literal',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|011|V=1|00|imm19:19|Rt:5',
        'syntax' => 'LDR <St>, <label>',
        'variant' => '32-bit',
        'form' => 'literal|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'V=0|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|011|V=0|00|imm19:19|Rt:5',
        'syntax' => 'LDR <Xt>, <label>',
        'variant' => '64-bit',
        'form' => 'literal',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|011|V=1|00|imm19:19|Rt:5',
        'syntax' => 'LDR <Dt>, <label>',
        'variant' => '64-bit',
        'form' => 'literal|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|011|V=0|00|imm19:19|Rt:5',
        'syntax' => 'LDRSW <Xt>, <label>',
        'variant' => 'Literal',
        'form' => 'literal',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|011|V=1|00|imm19:19|Rt:5',
        'syntax' => 'LDR <Qt>, <label>',
        'variant' => '128-bit',
        'form' => 'literal|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      },
      {
        'fields' => 'V=0|opc=11',
        'aliases' => undef,
        'opcode' => 'opc=11|011|V=0|00|imm19:19|Rt:5',
        'syntax' => 'PRFM (<prfop>|#<imm5>), <label>',
        'variant' => 'Literal',
        'form' => 'literal',
        'symbols' => [
          {
            'name' => 'prfop',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'imm5',
            'field' => 'Rt',
            'range' => '0 .. 31'
          },
          {
            'name' => 'label',
            'field' => 'imm19 * 4',
            'range' => '+/-1MB'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store exclusive',
    'opcode' => 'size:2|001000|o2|L|o1|Rs:5|o0|Rt2:5|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'o0=0|o1=0|L=0|o2=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|001000|o2=0|L=0|o1=0|Rs:5|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STXRB <Ws>, <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|001000|o2=0|L=0|o1=0|Rs:5|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLXRB <Ws>, <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|L=1|o2=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|001000|o2=0|L=1|o1=0|Rs=11111|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDXRB <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|001000|o2=0|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDAXRB <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|001000|o2=1|L=0|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLRB <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|001000|o2=1|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDARB <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|L=0|o2=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|001000|o2=0|L=0|o1=0|Rs:5|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STXRH <Ws>, <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|001000|o2=0|L=0|o1=0|Rs:5|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLXRH <Ws>, <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|L=1|o2=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|001000|o2=0|L=1|o1=0|Rs=11111|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDXRH <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|001000|o2=0|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDAXRH <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|001000|o2=1|L=0|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLRH <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|001000|o2=1|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDARH <Wt>, [<Xn|SP>{,#0}]',
        'variant' => 'No offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|L=0|o2=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|001000|o2=0|L=0|o1=0|Rs:5|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STXR <Ws>, <Wt>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|001000|o2=0|L=0|o1=0|Rs:5|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLXR <Ws>, <Wt>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=1|L=0|o2=0|size=10',
        'aliases' => undef,
        'opcode' => '1|sz=0|001000|o2=0|L=0|o1=1|Rs:5|o0=0|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STXP <Ws>, <Wt1>, <Wt2>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=1|L=0|o2=0|size=10',
        'aliases' => undef,
        'opcode' => '1|sz=0|001000|o2=0|L=0|o1=1|Rs:5|o0=1|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STLXP <Ws>, <Wt1>, <Wt2>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|L=1|o2=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|001000|o2=0|L=1|o1=0|Rs=11111|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDXR <Wt>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|001000|o2=0|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDAXR <Wt>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=1|L=1|o2=0|size=10',
        'aliases' => undef,
        'opcode' => '1|sz=0|001000|o2=0|L=1|o1=1|Rs=11111|o0=0|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDXP <Wt1>, <Wt2>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=1|L=1|o2=0|size=10',
        'aliases' => undef,
        'opcode' => '1|sz=0|001000|o2=0|L=1|o1=1|Rs=11111|o0=1|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDAXP <Wt1>, <Wt2>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|001000|o2=1|L=0|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLR <Wt>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|001000|o2=1|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDAR <Wt>, [<Xn|SP>{,#0}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|L=0|o2=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|001000|o2=0|L=0|o1=0|Rs:5|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STXR <Ws>, <Xt>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|001000|o2=0|L=0|o1=0|Rs:5|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLXR <Ws>, <Xt>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=1|L=0|o2=0|size=11',
        'aliases' => undef,
        'opcode' => '1|sz=1|001000|o2=0|L=0|o1=1|Rs:5|o0=0|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STXP <Ws>, <Xt1>, <Xt2>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=1|L=0|o2=0|size=11',
        'aliases' => undef,
        'opcode' => '1|sz=1|001000|o2=0|L=0|o1=1|Rs:5|o0=1|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STLXP <Ws>, <Xt1>, <Xt2>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Ws',
            'field' => 'Rs',
            'range' => ''
          },
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|L=1|o2=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|001000|o2=0|L=1|o1=0|Rs=11111|o0=0|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDXR <Xt>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|001000|o2=0|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDAXR <Xt>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=1|L=1|o2=0|size=11',
        'aliases' => undef,
        'opcode' => '1|sz=1|001000|o2=0|L=1|o1=1|Rs=11111|o0=0|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDXP <Xt1>, <Xt2>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=1|L=1|o2=0|size=11',
        'aliases' => undef,
        'opcode' => '1|sz=1|001000|o2=0|L=1|o1=1|Rs=11111|o0=1|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDAXP <Xt1>, <Xt2>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=0|o2=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|001000|o2=1|L=0|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'STLR <Xt>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|L=1|o2=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|001000|o2=1|L=1|o1=0|Rs=11111|o0=1|Rt2=11111|Rn:5|Rt:5',
        'syntax' => 'LDAR <Xt>, [<Xn|SP>{,#0}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store no-allocate pair (offset)',
    'opcode' => 'opc:2|101|V|000|L|imm7:7|Rt2:5|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'L=0|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|000|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STNP <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|000|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDNP <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|000|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STNP <St1>, <St2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|000|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDNP <St1>, <St2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|000|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STNP <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|000|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDNP <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|000|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STNP <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|000|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDNP <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|000|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STNP <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|000|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDNP <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register (immediate post-indexed)',
    'opcode' => 'size:2|111|V|00|opc:2|0|imm9:9|01|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opc=00|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STRB <Wt>, [<Xn|SP>], #<simm>',
        'variant' => 'Post-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDRB <Wt>, [<Xn|SP>], #<simm>',
        'variant' => 'Post-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=10|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Xt>, [<Xn|SP>], #<simm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=11|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Wt>, [<Xn|SP>], #<simm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STR <Bt>, [<Xn|SP>], #<simm>',
        'variant' => '8-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDR <Bt>, [<Xn|SP>], #<simm>',
        'variant' => '8-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=10|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STR <Qt>, [<Xn|SP>], #<simm>',
        'variant' => '128-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=11|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDR <Qt>, [<Xn|SP>], #<simm>',
        'variant' => '128-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STRH <Wt>, [<Xn|SP>], #<simm>',
        'variant' => 'Post-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDRH <Wt>, [<Xn|SP>], #<simm>',
        'variant' => 'Post-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=10|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Xt>, [<Xn|SP>], #<simm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=11|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Wt>, [<Xn|SP>], #<simm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STR <Ht>, [<Xn|SP>], #<simm>',
        'variant' => '16-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDR <Ht>, [<Xn|SP>], #<simm>',
        'variant' => '16-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STR <Wt>, [<Xn|SP>], #<simm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDR <Wt>, [<Xn|SP>], #<simm>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=10|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDRSW <Xt>, [<Xn|SP>], #<simm>',
        'variant' => 'Post-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STR <St>, [<Xn|SP>], #<simm>',
        'variant' => '32-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDR <St>, [<Xn|SP>], #<simm>',
        'variant' => '32-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STR <Xt>, [<Xn|SP>], #<simm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDR <Xt>, [<Xn|SP>], #<simm>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=00|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'STR <Dt>, [<Xn|SP>], #<simm>',
        'variant' => '64-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=01|0|imm9:9|01|Rn:5|Rt:5',
        'syntax' => 'LDR <Dt>, [<Xn|SP>], #<simm>',
        'variant' => '64-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register (immediate pre-indexed)',
    'opcode' => 'size:2|111|V|00|opc:2|0|imm9:9|11|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opc=00|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STRB <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => 'Pre-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDRB <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => 'Pre-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=10|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Xt>, [<Xn|SP>, #<simm>]!',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=11|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STR <Bt>, [<Xn|SP>, #<simm>]!',
        'variant' => '8-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDR <Bt>, [<Xn|SP>, #<simm>]!',
        'variant' => '8-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=10|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STR <Qt>, [<Xn|SP>, #<simm>]!',
        'variant' => '128-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=11|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDR <Qt>, [<Xn|SP>, #<simm>]!',
        'variant' => '128-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STRH <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => 'Pre-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDRH <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => 'Pre-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=10|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Xt>, [<Xn|SP>, #<simm>]!',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=11|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STR <Ht>, [<Xn|SP>, #<simm>]!',
        'variant' => '16-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDR <Ht>, [<Xn|SP>, #<simm>]!',
        'variant' => '16-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STR <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDR <Wt>, [<Xn|SP>, #<simm>]!',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=10|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDRSW <Xt>, [<Xn|SP>, #<simm>]!',
        'variant' => 'Pre-index',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STR <St>, [<Xn|SP>, #<simm>]!',
        'variant' => '32-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDR <St>, [<Xn|SP>, #<simm>]!',
        'variant' => '32-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STR <Xt>, [<Xn|SP>, #<simm>]!',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDR <Xt>, [<Xn|SP>, #<simm>]!',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=00|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'STR <Dt>, [<Xn|SP>, #<simm>]!',
        'variant' => '64-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=01|0|imm9:9|11|Rn:5|Rt:5',
        'syntax' => 'LDR <Dt>, [<Xn|SP>, #<simm>]!',
        'variant' => '64-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register (register offset)',
    'opcode' => 'size:2|111|V|00|opc:2|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'option!011|opc=00|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=00|1|Rm:5|option!011|S|10|Rn:5|Rt:5',
        'syntax' => 'STRB <Wt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]',
        'variant' => 'Extended register',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option=011|opc=00|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=00|1|Rm:5|option=011|S|10|Rn:5|Rt:5',
        'syntax' => 'STRB <Wt>, [<Xn|SP>, <Xm>{, LSL <amount>}]',
        'variant' => 'Shifted register',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option!011|opc=01|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=01|1|Rm:5|option!011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRB <Wt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]',
        'variant' => 'Extended register',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option=011|opc=01|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=01|1|Rm:5|option=011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRB <Wt>, [<Xn|SP>, <Xm>{, LSL <amount>}]',
        'variant' => 'Shifted register',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option!011|opc=10|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=10|1|Rm:5|option!011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Xt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]',
        'variant' => '64-bit with extended register offset',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option=011|opc=10|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=10|1|Rm:5|option=011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Xt>, [<Xn|SP>, <Xm>{, LSL <amount>}]',
        'variant' => '64-bit with shifted register offset',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option!011|opc=11|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=11|1|Rm:5|option!011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Wt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]',
        'variant' => '32-bit with extended register offset',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option=011|opc=11|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=11|1|Rm:5|option=011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Wt>, [<Xn|SP>, <Xm>{, LSL <amount>}]',
        'variant' => '32-bit with shifted register offset',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option!011|opc=00|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=00|1|Rm:5|option!011|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <Bt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]',
        'variant' => '8-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option=011|opc=00|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=00|1|Rm:5|option=011|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <Bt>, [<Xn|SP>, <Xm>{, LSL <amount>}]',
        'variant' => '8-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option!011|opc=01|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=01|1|Rm:5|option!011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <Bt>, [<Xn|SP>, (<Wm>|<Xm>), <extend> {<amount>}]',
        'variant' => '8-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'option=011|opc=01|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=01|1|Rm:5|option=011|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <Bt>, [<Xn|SP>, <Xm>{, LSL <amount>}]',
        'variant' => '8-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opc=10|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=10|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <Qt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '128-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#4 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=11|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=11|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <Qt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '128-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#4 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=00|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'STRH <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '32-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#1 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=01|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRH <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '32-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#1 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=10|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '64-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#1 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=11|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '32-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#1 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=00|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <Ht>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '16-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#1 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=01|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <Ht>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '16-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#1 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=00|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '32-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#2 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=01|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <Wt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '32-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#2 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=10|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDRSW <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '64-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#2 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=00|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <St>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '32-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#2 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=01|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <St>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '32-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#2 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=00|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '64-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#3 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=01|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <Xt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '64-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#3 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=10|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'PRFM (<prfop>|#<imm5>), [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => 'Integer',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'prfop',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'imm5',
            'field' => 'Rt',
            'range' => '0 .. 31'
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#3 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=00|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'STR <Dt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '64-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#3 if (S == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=01|1|Rm:5|option:3|S|10|Rn:5|Rt:5',
        'syntax' => 'LDR <Dt>, [<Xn|SP>, (<Wm>|<Xm>){, <extend> {<amount>}}]',
        'variant' => '64-bit',
        'form' => 'register|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTW if (option == 010)',
              'LSL if (option == 011)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'S',
            'range' => '',
            'values' => [
              '#0 if (S == 0)',
              '#3 if (S == 1)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register (unprivileged)',
    'opcode' => 'size:2|111|V|00|opc:2|0|imm9:9|10|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opc=00|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=00|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'STTRB <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=01|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTRB <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=10|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTRSB <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=11|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTRSB <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=00|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'STTRH <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=01|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTRH <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=10|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTRSH <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=11|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTRSH <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=00|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'STTR <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=01|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTR <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=10|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTRSW <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=00|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'STTR <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=01|0|imm9:9|10|Rn:5|Rt:5',
        'syntax' => 'LDTR <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register (unscaled immediate)',
    'opcode' => 'size:2|111|V|00|opc:2|0|imm9:9|00|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opc=00|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STURB <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDURB <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=10|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDURSB <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|00|opc=11|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDURSB <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STUR <Bt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '8-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDUR <Bt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '8-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=10|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STUR <Qt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|00|opc=11|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDUR <Qt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STURH <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDURH <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=10|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDURSH <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|00|opc=11|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDURSH <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STUR <Ht>, [<Xn|SP>{, #<simm>}]',
        'variant' => '16-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDUR <Ht>, [<Xn|SP>{, #<simm>}]',
        'variant' => '16-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STUR <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDUR <Wt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|00|opc=10|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDURSW <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STUR <St>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDUR <St>, [<Xn|SP>{, #<simm>}]',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STUR <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDUR <Xt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|00|opc=10|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'PRFUM (<prfop>|#<imm5>), [<Xn|SP>{, #<simm>}]',
        'variant' => 'Unscaled offset',
        'form' => 'unscaled offset',
        'symbols' => [
          {
            'name' => 'prfop',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'imm5',
            'field' => 'Rt',
            'range' => '0 .. 31'
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=00|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'STUR <Dt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|00|opc=01|0|imm9:9|00|Rn:5|Rt:5',
        'syntax' => 'LDUR <Dt>, [<Xn|SP>{, #<simm>}]',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'simm',
            'field' => 'imm9',
            'range' => '-256 .. 255'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register (unsigned immediate)',
    'opcode' => 'size:2|111|V|01|opc:2|imm12:12|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'opc=00|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STRB <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => 'Unsigned offset',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDRB <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => 'Unsigned offset',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|01|opc=10|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Xt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=0|01|opc=11|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDRSB <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STR <Bt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '8-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDR <Bt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '8-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Bt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12',
            'range' => '0 .. 4095'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|01|opc=10|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STR <Qt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '128-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 16',
            'range' => '0 .. 65520'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=1|size=00',
        'aliases' => undef,
        'opcode' => 'size=00|111|V=1|01|opc=11|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDR <Qt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '128-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 16',
            'range' => '0 .. 65520'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STRH <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => 'Unsigned offset',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 2',
            'range' => '0 .. 8190'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDRH <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => 'Unsigned offset',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 2',
            'range' => '0 .. 8190'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|01|opc=10|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Xt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 2',
            'range' => '0 .. 8190'
          }
        ]
      },
      {
        'fields' => 'opc=11|V=0|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=0|01|opc=11|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDRSH <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 2',
            'range' => '0 .. 8190'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STR <Ht>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '16-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 2',
            'range' => '0 .. 8190'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=01',
        'aliases' => undef,
        'opcode' => 'size=01|111|V=1|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDR <Ht>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '16-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Ht',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 2',
            'range' => '0 .. 8190'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STR <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 4',
            'range' => '0 .. 16380'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDR <Wt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 4',
            'range' => '0 .. 16380'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=0|01|opc=10|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDRSW <Xt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => 'Unsigned offset',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 4',
            'range' => '0 .. 16380'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STR <St>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '32-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 4',
            'range' => '0 .. 16380'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=10',
        'aliases' => undef,
        'opcode' => 'size=10|111|V=1|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDR <St>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '32-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'St',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 4',
            'range' => '0 .. 16380'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STR <Xt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 8',
            'range' => '0 .. 32760'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDR <Xt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 8',
            'range' => '0 .. 32760'
          }
        ]
      },
      {
        'fields' => 'opc=10|V=0|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=0|01|opc=10|imm12:12|Rn:5|Rt:5',
        'syntax' => 'PRFM (<prfop>|#<imm5>), [<Xn|SP>{, #<pimm>}]',
        'variant' => 'Unsigned offset',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'prfop',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'imm5',
            'field' => 'Rt',
            'range' => '0 .. 31'
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 8',
            'range' => '0 .. 32760'
          }
        ]
      },
      {
        'fields' => 'opc=00|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|01|opc=00|imm12:12|Rn:5|Rt:5',
        'syntax' => 'STR <Dt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '64-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 8',
            'range' => '0 .. 32760'
          }
        ]
      },
      {
        'fields' => 'opc=01|V=1|size=11',
        'aliases' => undef,
        'opcode' => 'size=11|111|V=1|01|opc=01|imm12:12|Rn:5|Rt:5',
        'syntax' => 'LDR <Dt>, [<Xn|SP>{, #<pimm>}]',
        'variant' => '64-bit',
        'form' => 'immediate|SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'pimm',
            'field' => 'imm12 * 8',
            'range' => '0 .. 32760'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register pair (offset)',
    'opcode' => 'opc:2|101|V|010|L|imm7:7|Rt2:5|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'L=0|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|010|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|010|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Wt1>, <Wt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|010|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <St1>, <St2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|010|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <St1>, <St2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=0|010|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDPSW <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => 'Signed offset',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|010|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|010|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Dt1>, <Dt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|010|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|010|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Xt1>, <Xt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|010|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|010|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Qt1>, <Qt2>, [<Xn|SP>{, #<imm>}]',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register pair (post-indexed)',
    'opcode' => 'opc:2|101|V|001|L|imm7:7|Rt2:5|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'L=0|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|001|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Wt1>, <Wt2>, [<Xn|SP>], #<imm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|001|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Wt1>, <Wt2>, [<Xn|SP>], #<imm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|001|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <St1>, <St2>, [<Xn|SP>], #<imm>',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|001|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <St1>, <St2>, [<Xn|SP>], #<imm>',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=0|001|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDPSW <Xt1>, <Xt2>, [<Xn|SP>], #<imm>',
        'variant' => 'Post-index',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|001|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Dt1>, <Dt2>, [<Xn|SP>], #<imm>',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|001|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Dt1>, <Dt2>, [<Xn|SP>], #<imm>',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|001|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Xt1>, <Xt2>, [<Xn|SP>], #<imm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|001|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Xt1>, <Xt2>, [<Xn|SP>], #<imm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|001|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Qt1>, <Qt2>, [<Xn|SP>], #<imm>',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|001|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Qt1>, <Qt2>, [<Xn|SP>], #<imm>',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Load/store register pair (pre-indexed)',
    'opcode' => 'opc:2|101|V|011|L|imm7:7|Rt2:5|Rn:5|Rt:5',
    'instructions' => [
      {
        'fields' => 'L=0|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|011|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=0|011|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Wt1>, <Wt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Wt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|011|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <St1>, <St2>, [<Xn|SP>, #<imm>]!',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=00',
        'aliases' => undef,
        'opcode' => 'opc=00|101|V=1|011|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <St1>, <St2>, [<Xn|SP>, #<imm>]!',
        'variant' => '32-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'St1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'St2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=0|011|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDPSW <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!',
        'variant' => 'Pre-index',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 4',
            'range' => '-256 .. 252'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|011|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Dt1>, <Dt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=01',
        'aliases' => undef,
        'opcode' => 'opc=01|101|V=1|011|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Dt1>, <Dt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '64-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Dt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Dt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|011|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=1|V=0|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=0|011|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Xt1>, <Xt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Xt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 8',
            'range' => '-512 .. 504'
          }
        ]
      },
      {
        'fields' => 'L=0|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|011|L=0|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'STP <Qt1>, <Qt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      },
      {
        'fields' => 'L=1|V=1|opc=10',
        'aliases' => undef,
        'opcode' => 'opc=10|101|V=1|011|L=1|imm7:7|Rt2:5|Rn:5|Rt:5',
        'syntax' => 'LDP <Qt1>, <Qt2>, [<Xn|SP>, #<imm>]!',
        'variant' => '128-bit',
        'form' => 'SIMD&FP',
        'symbols' => [
          {
            'name' => 'Qt1',
            'field' => 'Rt',
            'range' => ''
          },
          {
            'name' => 'Qt2',
            'field' => 'Rt2',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm7 * 16',
            'range' => '-1024 .. 1008'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Data processing - register',
    'opcode' => 'x|op0|x|op1|101|op2:4|xxxxxxxxx|op3|xxxxxxxxxxx',
    'instructions' => [
      {
        'fields' => 'op2=0110|op1=1|op0=0',
        'group' => 'Data-processing (2 source)'
      },
      {
        'fields' => 'op2=0110|op1=1|op0=1',
        'group' => 'Data-processing (1 source)'
      },
      {
        'fields' => 'op2=0xxx|op1=0',
        'group' => 'Logical (shifted register)'
      },
      {
        'fields' => 'op2=1xx0|op1=0',
        'group' => 'Add/subtract (shifted register)'
      },
      {
        'fields' => 'op2=1xx1|op1=0',
        'group' => 'Add/subtract (extended register)'
      },
      {
        'fields' => 'op2=0000|op1=1',
        'group' => 'Add/subtract (with carry)'
      },
      {
        'fields' => 'op3=0|op2=0010|op1=1',
        'group' => 'Conditional compare (register)'
      },
      {
        'fields' => 'op3=1|op2=0010|op1=1',
        'group' => 'Conditional compare (immediate)'
      },
      {
        'fields' => 'op2=0100|op1=1',
        'group' => 'Conditional select'
      },
      {
        'fields' => 'op2=1xxx|op1=1',
        'group' => 'Data-processing (3 source)'
      }
    ]
  },
  {
    'name' => 'Add/subtract (extended register)',
    'opcode' => 'sf|op|S|01011|opt:2|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opt=00|S=0|op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=0|S=0|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'ADD <Wd|WSP>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}',
        'variant' => '32-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Wd|WSP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'LSL|UXTW if (option == 010)',
              'UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      },
      {
        'fields' => 'opt=00|S=1|op=0|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|op=0|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd=11111',
            'syntax' => 'CMN <Wn|WSP>, <Wm>{, <extend> {#<amount>}}',
            'variant' => '32-bit',
            'form' => 'extended register',
            'symbols' => [
              {
                'name' => 'Wn|WSP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'extend',
                'field' => 'option',
                'range' => '',
                'values' => [
                  'UXTB if (option == 000)',
                  'UXTH if (option == 001)',
                  'LSL|UXTW if (option == 010)',
                  'UXTX if (option == 011)',
                  'SXTB if (option == 100)',
                  'SXTH if (option == 101)',
                  'SXTW if (option == 110)',
                  'SXTX if (option == 111)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm3',
                'range' => '0 .. 4'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=0|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'ADDS <Wd>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}',
        'variant' => '32-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'LSL|UXTW if (option == 010)',
              'UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      },
      {
        'fields' => 'opt=00|S=0|op=1|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=1|S=0|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'SUB <Wd|WSP>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}',
        'variant' => '32-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Wd|WSP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'LSL|UXTW if (option == 010)',
              'UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      },
      {
        'fields' => 'opt=00|S=1|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|op=1|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd=11111',
            'syntax' => 'CMP <Wn|WSP>, <Wm>{, <extend> {#<amount>}}',
            'variant' => '32-bit',
            'form' => 'extended register',
            'symbols' => [
              {
                'name' => 'Wn|WSP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'extend',
                'field' => 'option',
                'range' => '',
                'values' => [
                  'UXTB if (option == 000)',
                  'UXTH if (option == 001)',
                  'LSL|UXTW if (option == 010)',
                  'UXTX if (option == 011)',
                  'SXTB if (option == 100)',
                  'SXTH if (option == 101)',
                  'SXTW if (option == 110)',
                  'SXTX if (option == 111)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm3',
                'range' => '0 .. 4'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'SUBS <Wd>, <Wn|WSP>, <Wm>{, <extend> {#<amount>}}',
        'variant' => '32-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn|WSP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'LSL|UXTW if (option == 010)',
              'UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      },
      {
        'fields' => 'opt=00|S=0|op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=0|S=0|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'ADD <Xd|SP>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}',
        'variant' => '64-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Xd|SP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'R',
            'field' => 'option',
            'range' => '',
            'values' => [
              'W if (option == 00x)',
              'W if (option == 010)',
              'X if (option == x11)',
              'W if (option == 10x)',
              'W if (option == 110)'
            ]
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'UXTW if (option == 010)',
              'LSL|UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      },
      {
        'fields' => 'opt=00|S=1|op=0|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|op=0|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd=11111',
            'syntax' => 'CMN <Xn|SP>, <R><m>{, <extend> {#<amount>}}',
            'variant' => '64-bit',
            'form' => 'extended register',
            'symbols' => [
              {
                'name' => 'Xn|SP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'R',
                'field' => 'option',
                'range' => '',
                'values' => [
                  'W if (option == 00x)',
                  'W if (option == 010)',
                  'X if (option == x11)',
                  'W if (option == 10x)',
                  'W if (option == 110)'
                ]
              },
              {
                'name' => 'm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'extend',
                'field' => 'option',
                'range' => '',
                'values' => [
                  'UXTB if (option == 000)',
                  'UXTH if (option == 001)',
                  'UXTW if (option == 010)',
                  'LSL|UXTX if (option == 011)',
                  'SXTB if (option == 100)',
                  'SXTH if (option == 101)',
                  'SXTW if (option == 110)',
                  'SXTX if (option == 111)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm3',
                'range' => '0 .. 4'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=0|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'ADDS <Xd>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}',
        'variant' => '64-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'R',
            'field' => 'option',
            'range' => '',
            'values' => [
              'W if (option == 00x)',
              'W if (option == 010)',
              'X if (option == x11)',
              'W if (option == 10x)',
              'W if (option == 110)'
            ]
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'UXTW if (option == 010)',
              'LSL|UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      },
      {
        'fields' => 'opt=00|S=0|op=1|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=1|S=0|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'SUB <Xd|SP>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}',
        'variant' => '64-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Xd|SP',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'R',
            'field' => 'option',
            'range' => '',
            'values' => [
              'W if (option == 00x)',
              'W if (option == 010)',
              'X if (option == x11)',
              'W if (option == 10x)',
              'W if (option == 110)'
            ]
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'UXTW if (option == 010)',
              'LSL|UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      },
      {
        'fields' => 'opt=00|S=1|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|op=1|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd=11111',
            'syntax' => 'CMP <Xn|SP>, <R><m>{, <extend> {#<amount>}}',
            'variant' => '64-bit',
            'form' => 'extended register',
            'symbols' => [
              {
                'name' => 'Xn|SP',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'R',
                'field' => 'option',
                'range' => '',
                'values' => [
                  'W if (option == 00x)',
                  'W if (option == 010)',
                  'X if (option == x11)',
                  'W if (option == 10x)',
                  'W if (option == 110)'
                ]
              },
              {
                'name' => 'm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'extend',
                'field' => 'option',
                'range' => '',
                'values' => [
                  'UXTB if (option == 000)',
                  'UXTH if (option == 001)',
                  'UXTW if (option == 010)',
                  'LSL|UXTX if (option == 011)',
                  'SXTB if (option == 100)',
                  'SXTH if (option == 101)',
                  'SXTW if (option == 110)',
                  'SXTX if (option == 111)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm3',
                'range' => '0 .. 4'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=1|01011|opt=00|1|Rm:5|option:3|imm3:3|Rn:5|Rd:5',
        'syntax' => 'SUBS <Xd>, <Xn|SP>, <R><m>{, <extend> {#<amount>}}',
        'variant' => '64-bit',
        'form' => 'extended register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn|SP',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'R',
            'field' => 'option',
            'range' => '',
            'values' => [
              'W if (option == 00x)',
              'W if (option == 010)',
              'X if (option == x11)',
              'W if (option == 10x)',
              'W if (option == 110)'
            ]
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'extend',
            'field' => 'option',
            'range' => '',
            'values' => [
              'UXTB if (option == 000)',
              'UXTH if (option == 001)',
              'UXTW if (option == 010)',
              'LSL|UXTX if (option == 011)',
              'SXTB if (option == 100)',
              'SXTH if (option == 101)',
              'SXTW if (option == 110)',
              'SXTX if (option == 111)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm3',
            'range' => '0 .. 4'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Add/subtract (shifted register)',
    'opcode' => 'sf|op|S|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'S=0|op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=0|S=0|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ADD <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'S=1|op=0|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|op=0|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd=11111',
            'syntax' => 'CMN <Wn>, <Wm>{, <shift> #<amount>}',
            'variant' => '32-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 31'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=0|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ADDS <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'S=0|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=0|op=1|S=0|01011|shift:2|0|Rm:5|imm6:6|Rn=11111|Rd:5',
            'syntax' => 'NEG <Wd>, <Wm>{, <shift> #<amount>}',
            'variant' => '32-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 31'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=0|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'SUB <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'S=1|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|op=1|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd=11111',
            'syntax' => 'CMP <Wn>, <Wm>{, <shift> #<amount>}',
            'variant' => '32-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 31'
              }
            ]
          },
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=0|op=1|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn=11111|Rd:5',
            'syntax' => 'NEGS <Wd>, <Wm>{, <shift> #<amount>}',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 31'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'SUBS <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'S=0|op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=0|S=0|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ADD <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'S=1|op=0|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|op=0|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd=11111',
            'syntax' => 'CMN <Xn>, <Xm>{, <shift> #<amount>}',
            'variant' => '64-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 63'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=0|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ADDS <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'S=0|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=1|op=1|S=0|01011|shift:2|0|Rm:5|imm6:6|Rn=11111|Rd:5',
            'syntax' => 'NEG <Xd>, <Xm>{, <shift> #<amount>}',
            'variant' => '64-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 63'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=0|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'SUB <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'S=1|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|op=1|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd=11111',
            'syntax' => 'CMP <Xn>, <Xm>{, <shift> #<amount>}',
            'variant' => '64-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 63'
              }
            ]
          },
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=1|op=1|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn=11111|Rd:5',
            'syntax' => 'NEGS <Xd>, <Xm>{, <shift> #<amount>}',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 63'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=1|01011|shift:2|0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'SUBS <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Add/subtract (with carry)',
    'opcode' => 'sf|op|S|11010000|Rm:5|opcode2:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode2=000000|S=0|op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=0|S=0|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'ADC <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=000000|S=1|op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=0|S=1|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'ADCS <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=000000|S=0|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=0|op=1|S=0|11010000|Rm:5|opcode2=000000|Rn=11111|Rd:5',
            'syntax' => 'NGC <Wd>, <Wm>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=0|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'SBC <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=000000|S=1|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=0|op=1|S=1|11010000|Rm:5|opcode2=000000|Rn=11111|Rd:5',
            'syntax' => 'NGCS <Wd>, <Wm>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=1|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'SBCS <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=000000|S=0|op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=0|S=0|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'ADC <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=000000|S=1|op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=0|S=1|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'ADCS <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=000000|S=0|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=1|op=1|S=0|11010000|Rm:5|opcode2=000000|Rn=11111|Rd:5',
            'syntax' => 'NGC <Xd>, <Xm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=0|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'SBC <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=000000|S=1|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=1|op=1|S=1|11010000|Rm:5|opcode2=000000|Rn=11111|Rd:5',
            'syntax' => 'NGCS <Xd>, <Xm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=1|11010000|Rm:5|opcode2=000000|Rn:5|Rd:5',
        'syntax' => 'SBCS <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Conditional compare (immediate)',
    'opcode' => 'sf|op|S|11010010|imm5:5|cond:4|1|o2|Rn:5|o3|nzcv:4',
    'instructions' => [
      {
        'fields' => 'o3=0|o2=0|S=1|op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=0|S=1|11010010|imm5:5|cond:4|1|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMN <Wn>, #<imm>, #<nzcv>, <cond>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm5',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o3=0|o2=0|S=1|op=1|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=1|S=1|11010010|imm5:5|cond:4|1|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMP <Wn>, #<imm>, #<nzcv>, <cond>',
        'variant' => '32-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm5',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o3=0|o2=0|S=1|op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=0|S=1|11010010|imm5:5|cond:4|1|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMN <Xn>, #<imm>, #<nzcv>, <cond>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm5',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o3=0|o2=0|S=1|op=1|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=1|S=1|11010010|imm5:5|cond:4|1|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMP <Xn>, #<imm>, #<nzcv>, <cond>',
        'variant' => '64-bit',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm5',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Conditional compare (register)',
    'opcode' => 'sf|op|S|11010010|Rm:5|cond:4|0|o2|Rn:5|o3|nzcv:4',
    'instructions' => [
      {
        'fields' => 'o3=0|o2=0|S=1|op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=0|S=1|11010010|Rm:5|cond:4|0|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMN <Wn>, <Wm>, #<nzcv>, <cond>',
        'variant' => '32-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o3=0|o2=0|S=1|op=1|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=1|S=1|11010010|Rm:5|cond:4|0|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMP <Wn>, <Wm>, #<nzcv>, <cond>',
        'variant' => '32-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o3=0|o2=0|S=1|op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=0|S=1|11010010|Rm:5|cond:4|0|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMN <Xn>, <Xm>, #<nzcv>, <cond>',
        'variant' => '64-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o3=0|o2=0|S=1|op=1|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=1|S=1|11010010|Rm:5|cond:4|0|o2=0|Rn:5|o3=0|nzcv:4',
        'syntax' => 'CCMP <Xn>, <Xm>, #<nzcv>, <cond>',
        'variant' => '64-bit',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Conditional select',
    'opcode' => 'sf|op|S|11010100|Rm:5|cond:4|op2:2|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'op2=00|S=0|op=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|op=0|S=0|11010100|Rm:5|cond:4|op2=00|Rn:5|Rd:5',
        'syntax' => 'CSEL <Wd>, <Wn>, <Wm>, <cond>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op2=01|S=0|op=0|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rm != 0b11111 && cond != 0b111x && Rn != 0b11111 && Rn == Rm',
            'opcode' => 'sf=0|op=0|S=0|11010100|Rm=11111|cond:4|op2=01|Rn=11111|Rd:5',
            'syntax' => 'CINC <Wd>, <Wn>, <cond>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'Rm == 0b11111 && cond != 0b111x && Rn == 0b11111',
            'opcode' => 'sf=0|op=0|S=0|11010100|Rm=11111|cond:4|op2=01|Rn=11111|Rd:5',
            'syntax' => 'CSET <Wd>, <cond>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=0|S=0|11010100|Rm:5|cond:4|op2=01|Rn:5|Rd:5',
        'syntax' => 'CSINC <Wd>, <Wn>, <Wm>, <cond>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op2=00|S=0|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rm != 0b11111 && cond != 0b111x && Rn != 0b11111 && Rn == Rm',
            'opcode' => 'sf=0|op=1|S=0|11010100|Rm=11111|cond:4|op2=00|Rn=11111|Rd:5',
            'syntax' => 'CINV <Wd>, <Wn>, <cond>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'Rm == 0b11111 && cond != 0b111x && Rn == 0b11111',
            'opcode' => 'sf=0|op=1|S=0|11010100|Rm=11111|cond:4|op2=00|Rn=11111|Rd:5',
            'syntax' => 'CSETM <Wd>, <cond>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=0|11010100|Rm:5|cond:4|op2=00|Rn:5|Rd:5',
        'syntax' => 'CSINV <Wd>, <Wn>, <Wm>, <cond>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op2=01|S=0|op=1|sf=0',
        'aliases' => [
          {
            'conditions' => 'cond != 0b111x && Rn == Rm',
            'opcode' => 'sf=0|op=1|S=0|11010100|Rm:5|cond:4|op2=01|Rn:5|Rd:5',
            'syntax' => 'CNEG <Wd>, <Wn>, <cond>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op=1|S=0|11010100|Rm:5|cond:4|op2=01|Rn:5|Rd:5',
        'syntax' => 'CSNEG <Wd>, <Wn>, <Wm>, <cond>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op2=00|S=0|op=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op=0|S=0|11010100|Rm:5|cond:4|op2=00|Rn:5|Rd:5',
        'syntax' => 'CSEL <Xd>, <Xn>, <Xm>, <cond>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op2=01|S=0|op=0|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rm != 0b11111 && cond != 0b111x && Rn != 0b11111 && Rn == Rm',
            'opcode' => 'sf=1|op=0|S=0|11010100|Rm=11111|cond:4|op2=01|Rn=11111|Rd:5',
            'syntax' => 'CINC <Xd>, <Xn>, <cond>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'Rm == 0b11111 && cond != 0b111x && Rn == 0b11111',
            'opcode' => 'sf=1|op=0|S=0|11010100|Rm=11111|cond:4|op2=01|Rn=11111|Rd:5',
            'syntax' => 'CSET <Xd>, <cond>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=0|S=0|11010100|Rm:5|cond:4|op2=01|Rn:5|Rd:5',
        'syntax' => 'CSINC <Xd>, <Xn>, <Xm>, <cond>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op2=00|S=0|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rm != 0b11111 && cond != 0b111x && Rn != 0b11111 && Rn == Rm',
            'opcode' => 'sf=1|op=1|S=0|11010100|Rm=11111|cond:4|op2=00|Rn=11111|Rd:5',
            'syntax' => 'CINV <Xd>, <Xn>, <cond>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'Rm == 0b11111 && cond != 0b111x && Rn == 0b11111',
            'opcode' => 'sf=1|op=1|S=0|11010100|Rm=11111|cond:4|op2=00|Rn=11111|Rd:5',
            'syntax' => 'CSETM <Xd>, <cond>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=0|11010100|Rm:5|cond:4|op2=00|Rn:5|Rd:5',
        'syntax' => 'CSINV <Xd>, <Xn>, <Xm>, <cond>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op2=01|S=0|op=1|sf=1',
        'aliases' => [
          {
            'conditions' => 'cond != 0b111x && Rn == Rm',
            'opcode' => 'sf=1|op=1|S=0|11010100|Rm:5|cond:4|op2=01|Rn:5|Rd:5',
            'syntax' => 'CNEG <Xd>, <Xn>, <cond>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'cond',
                'field' => 'cond',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op=1|S=0|11010100|Rm:5|cond:4|op2=01|Rn:5|Rd:5',
        'syntax' => 'CSNEG <Xd>, <Xn>, <Xm>, <cond>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Data-processing (1 source)',
    'opcode' => 'sf|1|S|11010110|opcode2:5|opcode:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=000000|opcode2=00000|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|1|S=0|11010110|opcode2=00000|opcode=000000|Rn:5|Rd:5',
        'syntax' => 'RBIT <Wd>, <Wn>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000001|opcode2=00000|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|1|S=0|11010110|opcode2=00000|opcode=000001|Rn:5|Rd:5',
        'syntax' => 'REV16 <Wd>, <Wn>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000010|opcode2=00000|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|1|S=0|11010110|opcode2=00000|opcode=00001x|Rn:5|Rd:5',
        'syntax' => 'REV <Wd>, <Wn>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000100|opcode2=00000|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|1|S=0|11010110|opcode2=00000|opcode=000100|Rn:5|Rd:5',
        'syntax' => 'CLZ <Wd>, <Wn>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000101|opcode2=00000|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|1|S=0|11010110|opcode2=00000|opcode=000101|Rn:5|Rd:5',
        'syntax' => 'CLS <Wd>, <Wn>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000000|opcode2=00000|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|1|S=0|11010110|opcode2=00000|opcode=000000|Rn:5|Rd:5',
        'syntax' => 'RBIT <Xd>, <Xn>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000001|opcode2=00000|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|1|S=0|11010110|opcode2=00000|opcode=000001|Rn:5|Rd:5',
        'syntax' => 'REV16 <Xd>, <Xn>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000010|opcode2=00000|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|1|S=0|11010110|opcode2=00000|opcode=000010|Rn:5|Rd:5',
        'syntax' => 'REV32 <Xd>, <Xn>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000011|opcode2=00000|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|1|S=0|11010110|opcode2=00000|opcode=00001x|Rn:5|Rd:5',
        'syntax' => 'REV <Xd>, <Xn>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000100|opcode2=00000|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|1|S=0|11010110|opcode2=00000|opcode=000100|Rn:5|Rd:5',
        'syntax' => 'CLZ <Xd>, <Xn>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000101|opcode2=00000|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|1|S=0|11010110|opcode2=00000|opcode=000101|Rn:5|Rd:5',
        'syntax' => 'CLS <Xd>, <Xn>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Data-processing (2 source)',
    'opcode' => 'sf|0|S|11010110|Rm:5|opcode:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=000010|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|opcode=000010|Rn:5|Rd:5',
        'syntax' => 'UDIV <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000011|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|opcode=000011|Rn:5|Rd:5',
        'syntax' => 'SDIV <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001000|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|opcode=001000|Rn:5|Rd:5',
        'syntax' => 'LSLV <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001001|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|opcode=001001|Rn:5|Rd:5',
        'syntax' => 'LSRV <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001010|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|opcode=001010|Rn:5|Rd:5',
        'syntax' => 'ASRV <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001011|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|opcode=001011|Rn:5|Rd:5',
        'syntax' => 'RORV <Wd>, <Wn>, <Wm>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010000|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|0100|sz=00|Rn:5|Rd:5',
        'syntax' => 'CRC32B <Wd>, <Wn>, <Wm>',
        'variant' => 'CRC32B',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010001|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|0100|sz=01|Rn:5|Rd:5',
        'syntax' => 'CRC32H <Wd>, <Wn>, <Wm>',
        'variant' => 'CRC32H',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010010|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|0100|sz=10|Rn:5|Rd:5',
        'syntax' => 'CRC32W <Wd>, <Wn>, <Wm>',
        'variant' => 'CRC32W',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010100|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|0101|sz=00|Rn:5|Rd:5',
        'syntax' => 'CRC32CB <Wd>, <Wn>, <Wm>',
        'variant' => 'CRC32CB',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010101|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|0101|sz=01|Rn:5|Rd:5',
        'syntax' => 'CRC32CH <Wd>, <Wn>, <Wm>',
        'variant' => 'CRC32CH',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010110|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11010110|Rm:5|0101|sz=10|Rn:5|Rd:5',
        'syntax' => 'CRC32CW <Wd>, <Wn>, <Wm>',
        'variant' => 'CRC32CW',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000010|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|opcode=000010|Rn:5|Rd:5',
        'syntax' => 'UDIV <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000011|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|opcode=000011|Rn:5|Rd:5',
        'syntax' => 'SDIV <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001000|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|opcode=001000|Rn:5|Rd:5',
        'syntax' => 'LSLV <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001001|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|opcode=001001|Rn:5|Rd:5',
        'syntax' => 'LSRV <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001010|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|opcode=001010|Rn:5|Rd:5',
        'syntax' => 'ASRV <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001011|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|opcode=001011|Rn:5|Rd:5',
        'syntax' => 'RORV <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010011|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|0100|sz=11|Rn:5|Rd:5',
        'syntax' => 'CRC32X <Wd>, <Wn>, <Xm>',
        'variant' => 'CRC32X',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010111|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11010110|Rm:5|0101|sz=11|Rn:5|Rd:5',
        'syntax' => 'CRC32CX <Wd>, <Wn>, <Xm>',
        'variant' => 'CRC32CX',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Data-processing (3 source)',
    'opcode' => 'sf|op54:2|11011|op31:3|Rm:5|o0|Ra:5|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'o0=0|op31=000|op54=00|sf=0',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=0|op54=00|11011|op31=000|Rm:5|o0=0|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'MUL <Wd>, <Wn>, <Wm>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op54=00|11011|op31=000|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'MADD <Wd>, <Wn>, <Wm>, <Wa>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Wa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|op31=000|op54=00|sf=0',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=0|op54=00|11011|op31=000|Rm:5|o0=1|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'MNEG <Wd>, <Wn>, <Wm>',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|op54=00|11011|op31=000|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'MSUB <Wd>, <Wn>, <Wm>, <Wa>',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Wa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|op31=000|op54=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=1|op54=00|11011|op31=000|Rm:5|o0=0|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'MUL <Xd>, <Xn>, <Xm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op54=00|11011|op31=000|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'MADD <Xd>, <Xn>, <Xm>, <Xa>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|op31=000|op54=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=1|op54=00|11011|op31=000|Rm:5|o0=1|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'MNEG <Xd>, <Xn>, <Xm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op54=00|11011|op31=000|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'MSUB <Xd>, <Xn>, <Xm>, <Xa>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|op31=001|op54=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=1|op54=00|11011|op31=001|Rm:5|o0=0|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'SMULL <Xd>, <Wn>, <Wm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op54=00|11011|op31=001|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'SMADDL <Xd>, <Wn>, <Wm>, <Xa>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|op31=001|op54=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=1|op54=00|11011|op31=001|Rm:5|o0=1|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'SMNEGL <Xd>, <Wn>, <Wm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op54=00|11011|op31=001|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'SMSUBL <Xd>, <Wn>, <Wm>, <Xa>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|op31=010|op54=00|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op54=00|11011|op31=010|Rm:5|o0=0|Ra=11111|Rn:5|Rd:5',
        'syntax' => 'SMULH <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|op31=101|op54=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=1|op54=00|11011|op31=101|Rm:5|o0=0|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'UMULL <Xd>, <Wn>, <Wm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op54=00|11011|op31=101|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'UMADDL <Xd>, <Wn>, <Wm>, <Xa>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|op31=101|op54=00|sf=1',
        'aliases' => [
          {
            'conditions' => 'Ra == 0b11111',
            'opcode' => 'sf=1|op54=00|11011|op31=101|Rm:5|o0=1|Ra=11111|Rn:5|Rd:5',
            'syntax' => 'UMNEGL <Xd>, <Wn>, <Wm>',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|op54=00|11011|op31=101|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'UMSUBL <Xd>, <Wn>, <Wm>, <Xa>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Xa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|op31=110|op54=00|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|op54=00|11011|op31=110|Rm:5|o0=0|Ra=11111|Rn:5|Rd:5',
        'syntax' => 'UMULH <Xd>, <Xn>, <Xm>',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Logical (shifted register)',
    'opcode' => 'sf|opc:2|01010|shift:2|N|Rm:5|imm6:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'N=0|opc=00|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=00|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'AND <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=00|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=00|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'BIC <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=01|sf=0',
        'aliases' => [
          {
            'conditions' => 'shift == 0b00 && imm6 == 0b000000 && Rn == 0b11111',
            'opcode' => 'sf=0|opc=01|01010|shift=00|N=0|Rm:5|imm6=000000|Rn=11111|Rd:5',
            'syntax' => 'MOV <Wd>, <Wm>',
            'variant' => '32-bit',
            'form' => 'register',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=01|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ORR <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=01|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=0|opc=01|01010|shift:2|N=1|Rm:5|imm6:6|Rn=11111|Rd:5',
            'syntax' => 'MVN <Wd>, <Wm>{, <shift> #<amount>}',
            'variant' => '32-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)',
                  'ROR if (shift == 11)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 31'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=01|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ORN <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=10|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=10|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'EOR <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=10|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=10|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'EON <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=11|sf=0',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=0|opc=11|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd=11111',
            'syntax' => 'TST <Wn>, <Wm>{, <shift> #<amount>}',
            'variant' => '32-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Wn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Wm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)',
                  'ROR if (shift == 11)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 31'
              }
            ]
          }
        ],
        'opcode' => 'sf=0|opc=11|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ANDS <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=11|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|opc=11|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'BICS <Wd>, <Wn>, <Wm>{, <shift> #<amount>}',
        'variant' => '32-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Wm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 31'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=00|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=00|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'AND <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=00|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=00|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'BIC <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=01|sf=1',
        'aliases' => [
          {
            'conditions' => 'shift == 0b00 && imm6 == 0b000000 && Rn == 0b11111',
            'opcode' => 'sf=1|opc=01|01010|shift=00|N=0|Rm:5|imm6=000000|Rn=11111|Rd:5',
            'syntax' => 'MOV <Xd>, <Xm>',
            'variant' => '64-bit',
            'form' => 'register',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=01|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ORR <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=01|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rn == 0b11111',
            'opcode' => 'sf=1|opc=01|01010|shift:2|N=1|Rm:5|imm6:6|Rn=11111|Rd:5',
            'syntax' => 'MVN <Xd>, <Xm>{, <shift> #<amount>}',
            'variant' => '64-bit',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)',
                  'ROR if (shift == 11)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 63'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=01|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ORN <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=10|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=10|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'EOR <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=10|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=10|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'EON <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=0|opc=11|sf=1',
        'aliases' => [
          {
            'conditions' => 'Rd == 0b11111',
            'opcode' => 'sf=1|opc=11|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd=11111',
            'syntax' => 'TST <Xn>, <Xm>{, <shift> #<amount>}',
            'variant' => '64-bit',
            'form' => 'shifted register',
            'symbols' => [
              {
                'name' => 'Xn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Xm',
                'field' => 'Rm',
                'range' => ''
              },
              {
                'name' => 'shift',
                'field' => 'shift',
                'range' => '',
                'values' => [
                  'LSL if (shift == 00)',
                  'LSR if (shift == 01)',
                  'ASR if (shift == 10)',
                  'ROR if (shift == 11)'
                ]
              },
              {
                'name' => 'amount',
                'field' => 'imm6',
                'range' => '0 .. 63'
              }
            ]
          }
        ],
        'opcode' => 'sf=1|opc=11|01010|shift:2|N=0|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'ANDS <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      },
      {
        'fields' => 'N=1|opc=11|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|opc=11|01010|shift:2|N=1|Rm:5|imm6:6|Rn:5|Rd:5',
        'syntax' => 'BICS <Xd>, <Xn>, <Xm>{, <shift> #<amount>}',
        'variant' => '64-bit',
        'form' => 'shifted register',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Xm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'shift',
            'range' => '',
            'values' => [
              'LSL if (shift == 00)',
              'LSR if (shift == 01)',
              'ASR if (shift == 10)',
              'ROR if (shift == 11)'
            ]
          },
          {
            'name' => 'amount',
            'field' => 'imm6',
            'range' => '0 .. 63'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Data processing - SIMD and floating point',
    'opcode' => 'op0:4|111|op1:2|op2:4|op3:2|x|op4:6|xxxxxxxxxx',
    'instructions' => [
      {
        'fields' => 'op4=xxxx10|op3=00|op2=x101|op1=0x|op0=0100',
        'group' => 'Cryptographic AES'
      },
      {
        'fields' => 'op4=0xxx00|op2=x0xx|op1=0x|op0=0101',
        'group' => 'Cryptographic three-register SHA'
      },
      {
        'fields' => 'op4=xxxx10|op3=00|op2=x101|op1=0x|op0=0101',
        'group' => 'Cryptographic two-register SHA'
      },
      {
        'fields' => 'op4=0xxxx1|op2=00xx|op1=00|op0=01x1',
        'group' => 'Advanced SIMD scalar copy'
      },
      {
        'fields' => 'op4=xxxx10|op3=00|op2=x100|op1=0x|op0=01x1',
        'group' => 'Advanced SIMD scalar two-register miscellaneous'
      },
      {
        'fields' => 'op4=xxxx10|op3=00|op2=x110|op1=0x|op0=01x1',
        'group' => 'Advanced SIMD scalar pairwise'
      },
      {
        'fields' => 'op4=xxxx00|op2=x1xx|op1=0x|op0=01x1',
        'group' => 'Advanced SIMD scalar three different'
      },
      {
        'fields' => 'op4=xxxxx1|op2=x1xx|op1=0x|op0=01x1',
        'group' => 'Advanced SIMD scalar three same'
      },
      {
        'fields' => 'op4=xxxxx1|op1=10|op0=01x1',
        'group' => 'Advanced SIMD scalar shift by immediate'
      },
      {
        'fields' => 'op4=xxxxx0|op1=1x|op0=01x1',
        'group' => 'Advanced SIMD scalar x indexed element'
      },
      {
        'fields' => 'op4=0xxx00|op2=x0xx|op1=0x|op0=0x00',
        'group' => 'Advanced SIMD table lookup'
      },
      {
        'fields' => 'op4=0xxx10|op2=x0xx|op1=0x|op0=0x00',
        'group' => 'Advanced SIMD permute'
      },
      {
        'fields' => 'op4=0xxxx0|op2=x0xx|op1=0x|op0=0x10',
        'group' => 'Advanced SIMD extract'
      },
      {
        'fields' => 'op4=0xxxx1|op2=00xx|op1=00|op0=0xx0',
        'group' => 'Advanced SIMD copy'
      },
      {
        'fields' => 'op4=xxxx10|op3=00|op2=x100|op1=0x|op0=0xx0',
        'group' => 'Advanced SIMD two-register miscellaneous'
      },
      {
        'fields' => 'op4=xxxx10|op3=00|op2=x110|op1=0x|op0=0xx0',
        'group' => 'Advanced SIMD across lanes'
      },
      {
        'fields' => 'op4=xxxx00|op2=x1xx|op1=0x|op0=0xx0',
        'group' => 'Advanced SIMD three different'
      },
      {
        'fields' => 'op4=xxxxx1|op2=x1xx|op1=0x|op0=0xx0',
        'group' => 'Advanced SIMD three same'
      },
      {
        'fields' => 'op4=xxxxx1|op2=0000|op1=10|op0=0xx0',
        'group' => 'Advanced SIMD modified immediate'
      },
      {
        'fields' => 'op4=xxxxx1|op2!0000|op1=10|op0=0xx0',
        'group' => 'Advanced SIMD shift by immediate'
      },
      {
        'fields' => 'op4=xxxxx0|op1=1x|op0=0xx0',
        'group' => 'Advanced SIMD vector x indexed element'
      },
      {
        'fields' => 'op2=x0xx|op1=0x|op0=x0x1',
        'group' => 'Conversion between floating-point and fixed-point'
      },
      {
        'fields' => 'op4=000000|op2=x1xx|op1=0x|op0=x0x1',
        'group' => 'Conversion between floating-point and integer'
      },
      {
        'fields' => 'op4=x10000|op2=x1xx|op1=0x|op0=x0x1',
        'group' => 'Floating-point data-processing (1 source)'
      },
      {
        'fields' => 'op4=xx1000|op2=x1xx|op1=0x|op0=x0x1',
        'group' => 'Floating-point compare'
      },
      {
        'fields' => 'op4=xxx100|op2=x1xx|op1=0x|op0=x0x1',
        'group' => 'Floating-point immediate'
      },
      {
        'fields' => 'op4=xxxx01|op2=x1xx|op1=0x|op0=x0x1',
        'group' => 'Floating-point conditional compare'
      },
      {
        'fields' => 'op4=xxxx10|op2=x1xx|op1=0x|op0=x0x1',
        'group' => 'Floating-point data-processing (2 source)'
      },
      {
        'fields' => 'op4=xxxx11|op2=x1xx|op1=0x|op0=x0x1',
        'group' => 'Floating-point conditional select'
      },
      {
        'fields' => 'op1=1x|op0=x0x1',
        'group' => 'Floating-point data-processing (3 source)'
      }
    ]
  },
  {
    'name' => 'Advanced SIMD across lanes',
    'opcode' => '0|Q|U|01110|size:2|11000|opcode:5|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|11000|opcode=00011|10|Rn:5|Rd:5',
        'syntax' => 'SADDLV <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 00)',
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|11000|opcode=01010|10|Rn:5|Rd:5',
        'syntax' => 'SMAXV <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|11000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'SMINV <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|11000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'ADDV <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|11000|opcode=00011|10|Rn:5|Rd:5',
        'syntax' => 'UADDLV <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 00)',
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|11000|opcode=01010|10|Rn:5|Rd:5',
        'syntax' => 'UMAXV <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|11000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'UMINV <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|11000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FMAXNMV <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '4S if (Q == 1 && sz == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01111|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|11000|opcode=01111|10|Rn:5|Rd:5',
        'syntax' => 'FMAXV <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '4S if (Q == 1 && sz == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|11000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FMINNMV <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '4S if (Q == 1 && sz == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01111|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|11000|opcode=01111|10|Rn:5|Rd:5',
        'syntax' => 'FMINV <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '4S if (Q == 1 && sz == 0)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD copy',
    'opcode' => '0|Q|op|01110000|imm5:5|0|imm4:4|1|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'imm4=0000|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|01110000|imm5:5|0|imm4=0000|1|Rn:5|Rd:5',
        'syntax' => 'DUP <Vd>.<T>, <Vn>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'element',
        'symbols' => [
          {
            'name' => 'T',
            'field' => 'imm5:Q',
            'range' => '',
            'values' => [
              '8B if (imm5 == xxxx1 && Q == 0)',
              '16B if (imm5 == xxxx1 && Q == 1)',
              '4H if (imm5 == xxx10 && Q == 0)',
              '8H if (imm5 == xxx10 && Q == 1)',
              '2S if (imm5 == xx100 && Q == 0)',
              '4S if (imm5 == xx100 && Q == 1)',
              '2D if (imm5 == x1000 && Q == 1)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)',
              'S if (imm5 == xx100)',
              'D if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'imm5<4:1> if (imm5 == xxxx1)',
              'imm5<4:2> if (imm5 == xxx10)',
              'imm5<4:3> if (imm5 == xx100)',
              'imm5<4> if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'imm4=0001|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|01110000|imm5:5|0|imm4=0001|1|Rn:5|Rd:5',
        'syntax' => 'DUP <Vd>.<T>, <R><n>',
        'variant' => 'Advanced SIMD',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'imm5:Q',
            'range' => '',
            'values' => [
              '8B if (imm5 == xxxx1 && Q == 0)',
              '16B if (imm5 == xxxx1 && Q == 1)',
              '4H if (imm5 == xxx10 && Q == 0)',
              '8H if (imm5 == xxx10 && Q == 1)',
              '2S if (imm5 == xx100 && Q == 0)',
              '4S if (imm5 == xx100 && Q == 1)',
              '2D if (imm5 == x1000 && Q == 1)'
            ]
          },
          {
            'name' => 'R',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'W if (imm5 == xxxx1)',
              'W if (imm5 == xxx10)',
              'W if (imm5 == xx100)',
              'X if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'imm4=0101|op=0|Q=0',
        'aliases' => undef,
        'opcode' => '0|Q=0|op=0|01110000|imm5:5|0|imm4=0101|1|Rn:5|Rd:5',
        'syntax' => 'SMOV <Wd>, <Vn>.<Ts>[<index>]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'imm5<4:1> if (imm5 == xxxx1)',
              'imm5<4:2> if (imm5 == xxx10)'
            ]
          }
        ]
      },
      {
        'fields' => 'imm4=0111|op=0|Q=0',
        'aliases' => [
          {
            'conditions' => 'imm5 == 0bx1000',
            'opcode' => '0|Q=0|op=0|01110000|imm5=xx100|0|imm4=0111|1|Rn:5|Rd:5',
            'syntax' => 'MOV <Wd>, <Vn>.S[<index>]',
            'variant' => '32-bit',
            'form' => 'to general',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Vn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'index',
                'field' => 'imm5<4:3>',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'imm5 == 0bxx100',
            'opcode' => '0|Q=0|op=0|01110000|imm5=xx100|0|imm4=0111|1|Rn:5|Rd:5',
            'syntax' => 'MOV <Wd>, <Vn>.S[<index>]',
            'variant' => '32-bit',
            'form' => 'to general',
            'symbols' => [
              {
                'name' => 'Wd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Vn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'index',
                'field' => 'imm5<4:3>',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => '0|Q=0|op=0|01110000|imm5:5|0|imm4=0111|1|Rn:5|Rd:5',
        'syntax' => 'UMOV <Wd>, <Vn>.<Ts>[<index>]',
        'variant' => '32-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)',
              'S if (imm5 == xx100)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'imm5<4:1> if (imm5 == xxxx1)',
              'imm5<4:2> if (imm5 == xxx10)',
              'imm5<4:3> if (imm5 == xx100)'
            ]
          }
        ]
      },
      {
        'fields' => 'imm4=0011|op=0|Q=1',
        'aliases' => undef,
        'opcode' => '0|Q=1|op=0|01110000|imm5:5|0|imm4=0011|1|Rn:5|Rd:5',
        'syntax' => 'INS <Vd>.<Ts>[<index>], <R><n>',
        'variant' => 'Advanced SIMD',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)',
              'S if (imm5 == xx100)',
              'D if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'imm5<4:1> if (imm5 == xxxx1)',
              'imm5<4:2> if (imm5 == xxx10)',
              'imm5<4:3> if (imm5 == xx100)',
              'imm5<4> if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'R',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'W if (imm5 == xxxx1)',
              'W if (imm5 == xxx10)',
              'W if (imm5 == xx100)',
              'X if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'imm4=0101|op=0|Q=1',
        'aliases' => undef,
        'opcode' => '0|Q=1|op=0|01110000|imm5:5|0|imm4=0101|1|Rn:5|Rd:5',
        'syntax' => 'SMOV <Xd>, <Vn>.<Ts>[<index>]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)',
              'S if (imm5 == xx100)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'imm5<4:1> if (imm5 == xxxx1)',
              'imm5<4:2> if (imm5 == xxx10)',
              'imm5<4:3> if (imm5 == xx100)'
            ]
          }
        ]
      },
      {
        'fields' => 'imm4=0111|imm5=x1000|op=0|Q=1',
        'aliases' => [
          {
            'conditions' => 'imm5 == 0bx1000',
            'opcode' => '0|Q=1|op=0|01110000|imm5=x1000|0|imm4=0111|1|Rn:5|Rd:5',
            'syntax' => 'MOV <Xd>, <Vn>.D[<index>]',
            'variant' => '64-bit',
            'form' => 'to general',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Vn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'index',
                'field' => 'imm5<4>',
                'range' => ''
              }
            ]
          },
          {
            'conditions' => 'imm5 == 0bxx100',
            'opcode' => '0|Q=1|op=0|01110000|imm5=x1000|0|imm4=0111|1|Rn:5|Rd:5',
            'syntax' => 'MOV <Xd>, <Vn>.D[<index>]',
            'variant' => '64-bit',
            'form' => 'to general',
            'symbols' => [
              {
                'name' => 'Xd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Vn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'index',
                'field' => 'imm5<4>',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => '0|Q=1|op=0|01110000|imm5=x1000|0|imm4=0111|1|Rn:5|Rd:5',
        'syntax' => 'UMOV <Xd>, <Vn>.<Ts>[<index>]',
        'variant' => '64-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'D if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'imm5<4>',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=1|Q=1',
        'aliases' => undef,
        'opcode' => '0|Q=1|op=1|01110000|imm5:5|0|imm4:4|1|Rn:5|Rd:5',
        'syntax' => 'INS <Vd>.<Ts>[<index1>], <Vn>.<Ts>[<index2>]',
        'variant' => 'Advanced SIMD',
        'form' => 'element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)',
              'S if (imm5 == xx100)',
              'D if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'index1',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'imm5<4:1> if (imm5 == xxxx1)',
              'imm5<4:2> if (imm5 == xxx10)',
              'imm5<4:3> if (imm5 == xx100)',
              'imm5<4> if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'index2',
            'field' => 'imm5:imm4',
            'range' => '',
            'values' => [
              'imm4<3:0> if (imm5 == xxxx1)',
              'imm4<3:1> if (imm5 == xxx10)',
              'imm4<3:2> if (imm5 == xx100)',
              'imm4<3> if (imm5 == x1000)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD extract',
    'opcode' => '0|Q|101110|op2:2|0|Rm:5|0|imm4:4|0|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|101110|op2=00|0|Rm:5|0|imm4:4|0|Rn:5|Rd:5',
        'syntax' => 'EXT <Vd>.<T>, <Vn>.<T>, <Vm>.<T>, #<index>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'Q:imm4',
            'range' => '',
            'values' => [
              'imm4<2:0> if (Q == 0 && imm4<3> == 0)',
              'imm4 if (Q == 1 && imm4<3> == x)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD modified immediate',
    'opcode' => '0|Q|op|0111100000|a|b|c|cmode:4|o2|1|d|e|f|g|h|Rd:5',
    'instructions' => [
      {
        'fields' => 'o2=0|cmode=0xx0|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|0111100000|a|b|c|cmode=0xx0|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MOVI <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '32-bit shifted immediate',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '2S if (Q == 0)',
              '4S if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<2:1>',
            'range' => '',
            'values' => [
              '0 if (cmode<2:1> == 00)',
              '8 if (cmode<2:1> == 01)',
              '16 if (cmode<2:1> == 10)',
              '24 if (cmode<2:1> == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=0xx1|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|0111100000|a|b|c|cmode=0xx1|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'ORR <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '32-bit',
        'form' => 'vector|immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '2S if (Q == 0)',
              '4S if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<2:1>',
            'range' => '',
            'values' => [
              '0 if (cmode<2:1> == 00)',
              '8 if (cmode<2:1> == 01)',
              '16 if (cmode<2:1> == 10)',
              '24 if (cmode<2:1> == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=10x0|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|0111100000|a|b|c|cmode=10x0|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MOVI <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '16-bit shifted immediate',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '4H if (Q == 0)',
              '8H if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<1>',
            'range' => '',
            'values' => [
              '0 if (cmode<1> == 0)',
              '8 if (cmode<1> == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=10x1|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|0111100000|a|b|c|cmode=10x1|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'ORR <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '16-bit',
        'form' => 'vector|immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '4H if (Q == 0)',
              '8H if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<1>',
            'range' => '',
            'values' => [
              '0 if (cmode<1> == 0)',
              '8 if (cmode<1> == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=110x|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|0111100000|a|b|c|cmode=110x|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MOVI <Vd>.<T>, #<imm8>, MSL #<amount>',
        'variant' => '32-bit shifting ones',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '2S if (Q == 0)',
              '4S if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<0>',
            'range' => '',
            'values' => [
              '8 if (cmode<0> == 0)',
              '16 if (cmode<0> == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=1110|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|0111100000|a|b|c|cmode=1110|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MOVI <Vd>.<T>, #<imm8>{, LSL #0}',
        'variant' => '8-bit',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=1111|op=0',
        'aliases' => undef,
        'opcode' => '0|Q|op=0|0111100000|a|b|c|cmode=1111|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'FMOV <Vd>.<T>, #<imm>',
        'variant' => 'Single-precision',
        'form' => 'vector|immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '2S if (Q == 0)',
              '4S if (Q == 1)'
            ]
          },
          {
            'name' => 'imm',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=0xx0|op=1',
        'aliases' => undef,
        'opcode' => '0|Q|op=1|0111100000|a|b|c|cmode=0xx0|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MVNI <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '32-bit shifted immediate',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '2S if (Q == 0)',
              '4S if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<2:1>',
            'range' => '',
            'values' => [
              '0 if (cmode<2:1> == 00)',
              '8 if (cmode<2:1> == 01)',
              '16 if (cmode<2:1> == 10)',
              '24 if (cmode<2:1> == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=0xx1|op=1',
        'aliases' => undef,
        'opcode' => '0|Q|op=1|0111100000|a|b|c|cmode=0xx1|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'BIC <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '32-bit',
        'form' => 'vector|immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '2S if (Q == 0)',
              '4S if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<2:1>',
            'range' => '',
            'values' => [
              '0 if (cmode<2:1> == 00)',
              '8 if (cmode<2:1> == 01)',
              '16 if (cmode<2:1> == 10)',
              '24 if (cmode<2:1> == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=10x0|op=1',
        'aliases' => undef,
        'opcode' => '0|Q|op=1|0111100000|a|b|c|cmode=10x0|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MVNI <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '16-bit shifted immediate',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '4H if (Q == 0)',
              '8H if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<1>',
            'range' => '',
            'values' => [
              '0 if (cmode<1> == 0)',
              '8 if (cmode<1> == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=10x1|op=1',
        'aliases' => undef,
        'opcode' => '0|Q|op=1|0111100000|a|b|c|cmode=10x1|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'BIC <Vd>.<T>, #<imm8>{, LSL #<amount>}',
        'variant' => '16-bit',
        'form' => 'vector|immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '4H if (Q == 0)',
              '8H if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<1>',
            'range' => '',
            'values' => [
              '0 if (cmode<1> == 0)',
              '8 if (cmode<1> == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=110x|op=1',
        'aliases' => undef,
        'opcode' => '0|Q|op=1|0111100000|a|b|c|cmode=110x|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MVNI <Vd>.<T>, #<imm8>, MSL #<amount>',
        'variant' => '32-bit shifting ones',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '2S if (Q == 0)',
              '4S if (Q == 1)'
            ]
          },
          {
            'name' => 'imm8',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          },
          {
            'name' => 'amount',
            'field' => 'cmode<0>',
            'range' => '',
            'values' => [
              '8 if (cmode<0> == 0)',
              '16 if (cmode<0> == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=1110|op=1|Q=0',
        'aliases' => undef,
        'opcode' => '0|Q=0|op=1|0111100000|a|b|c|cmode=1110|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MOVI <Dd>, #<imm>',
        'variant' => '64-bit scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=1110|op=1|Q=1',
        'aliases' => undef,
        'opcode' => '0|Q=1|op=1|0111100000|a|b|c|cmode=1110|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'MOVI <Vd>.2D, #<imm>',
        'variant' => '64-bit vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o2=0|cmode=1111|op=1|Q=1',
        'aliases' => undef,
        'opcode' => '0|Q=1|op=1|0111100000|a|b|c|cmode=1111|o2=0|1|d|e|f|g|h|Rd:5',
        'syntax' => 'FMOV <Vd>.2D, #<imm>',
        'variant' => 'Double-precision',
        'form' => 'vector|immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'a:b:c:d:e:f:g:h',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD permute',
    'opcode' => '0|Q|001110|size:2|0|Rm:5|0|opcode:3|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=001',
        'aliases' => undef,
        'opcode' => '0|Q|001110|size:2|0|Rm:5|0|opcode=001|10|Rn:5|Rd:5',
        'syntax' => 'UZP1 <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010',
        'aliases' => undef,
        'opcode' => '0|Q|001110|size:2|0|Rm:5|0|opcode=010|10|Rn:5|Rd:5',
        'syntax' => 'TRN1 <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=011',
        'aliases' => undef,
        'opcode' => '0|Q|001110|size:2|0|Rm:5|0|opcode=011|10|Rn:5|Rd:5',
        'syntax' => 'ZIP1 <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=101',
        'aliases' => undef,
        'opcode' => '0|Q|001110|size:2|0|Rm:5|0|opcode=101|10|Rn:5|Rd:5',
        'syntax' => 'UZP2 <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=110',
        'aliases' => undef,
        'opcode' => '0|Q|001110|size:2|0|Rm:5|0|opcode=110|10|Rn:5|Rd:5',
        'syntax' => 'TRN2 <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=111',
        'aliases' => undef,
        'opcode' => '0|Q|001110|size:2|0|Rm:5|0|opcode=111|10|Rn:5|Rd:5',
        'syntax' => 'ZIP2 <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD scalar copy',
    'opcode' => '01|op|11110000|imm5:5|0|imm4:4|1|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'imm4=0000|op=0',
        'aliases' => undef,
        'opcode' => '01|op=0|11110000|imm5:5|0|imm4=0000|1|Rn:5|Rd:5',
        'syntax' => 'DUP <V><d>, <Vn>.<T>[<index>]',
        'variant' => 'Scalar',
        'form' => 'element',
        'symbols' => [
          {
            'name' => 'T',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)',
              'S if (imm5 == xx100)',
              'D if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'V',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'B if (imm5 == xxxx1)',
              'H if (imm5 == xxx10)',
              'S if (imm5 == xx100)',
              'D if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'index',
            'field' => 'imm5',
            'range' => '',
            'values' => [
              'imm5<4:1> if (imm5 == xxxx1)',
              'imm5<4:2> if (imm5 == xxx10)',
              'imm5<4:3> if (imm5 == xx100)',
              'imm5<4> if (imm5 == x1000)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD scalar pairwise',
    'opcode' => '01|U|11110|size:2|11000|opcode:5|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=11011|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|11000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'ADDP <V><d>, <Vn>.<T>',
        'variant' => 'Advanced SIMD',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size',
            'range' => '',
            'values' => [
              '2D if (size == 11)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|11000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FMAXNMP <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '2S if (sz == 0)',
              '2D if (sz == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01101|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|11000|opcode=01101|10|Rn:5|Rd:5',
        'syntax' => 'FADDP <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '2S if (sz == 0)',
              '2D if (sz == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01111|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|11000|opcode=01111|10|Rn:5|Rd:5',
        'syntax' => 'FMAXP <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '2S if (sz == 0)',
              '2D if (sz == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|11000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FMINNMP <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '2S if (sz == 0)',
              '2D if (sz == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01111|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|11000|opcode=01111|10|Rn:5|Rd:5',
        'syntax' => 'FMINP <V><d>, <Vn>.<T>',
        'variant' => 'Single-precision and double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '2S if (sz == 0)',
              '2D if (sz == 1)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD scalar shift by immediate',
    'opcode' => '01|U|111110|immh:4|immb:3|opcode:5|1|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00000|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=00000|1|Rn:5|Rd:5',
        'syntax' => 'SSHR <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00010|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=00010|1|Rn:5|Rd:5',
        'syntax' => 'SSRA <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00100|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=00100|1|Rn:5|Rd:5',
        'syntax' => 'SRSHR <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00110|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'SRSRA <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01010|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'SHL <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '0 .. 63',
            'values' => [
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01110|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=01110|1|Rn:5|Rd:5',
        'syntax' => 'SQSHL <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)',
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10010|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=10010|1|Rn:5|Rd:5',
        'syntax' => 'SQSHRN <Vb><d>, <Va><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'H if (immh == 0001)',
              'S if (immh == 001x)',
              'D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10011|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=10011|1|Rn:5|Rd:5',
        'syntax' => 'SQRSHRN <Vb><d>, <Va><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'H if (immh == 0001)',
              'S if (immh == 001x)',
              'D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11100|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'SCVTF <V><d>, <V><n>, #<fbits>',
        'variant' => 'Scalar',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'S if (immh == 01xx)',
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11111|immh!0000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111110|immh!0000|immb:3|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <V><d>, <V><n>, #<fbits>',
        'variant' => 'Scalar',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'S if (immh == 01xx)',
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00000|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=00000|1|Rn:5|Rd:5',
        'syntax' => 'USHR <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00010|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=00010|1|Rn:5|Rd:5',
        'syntax' => 'USRA <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00100|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=00100|1|Rn:5|Rd:5',
        'syntax' => 'URSHR <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00110|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'URSRA <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01000|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=01000|1|Rn:5|Rd:5',
        'syntax' => 'SRI <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '1 .. 64',
            'values' => [
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01010|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'SLI <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '0 .. 63',
            'values' => [
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01100|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=01100|1|Rn:5|Rd:5',
        'syntax' => 'SQSHLU <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)',
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01110|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=01110|1|Rn:5|Rd:5',
        'syntax' => 'UQSHL <V><d>, <V><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)',
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10000|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=10000|1|Rn:5|Rd:5',
        'syntax' => 'SQSHRUN <Vb><d>, <Va><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'H if (immh == 0001)',
              'S if (immh == 001x)',
              'D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10001|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=10001|1|Rn:5|Rd:5',
        'syntax' => 'SQRSHRUN <Vb><d>, <Va><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'H if (immh == 0001)',
              'S if (immh == 001x)',
              'D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10010|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=10010|1|Rn:5|Rd:5',
        'syntax' => 'UQSHRN <Vb><d>, <Va><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'H if (immh == 0001)',
              'S if (immh == 001x)',
              'D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10011|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=10011|1|Rn:5|Rd:5',
        'syntax' => 'UQRSHRN <Vb><d>, <Va><n>, #<shift>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'B if (immh == 0001)',
              'H if (immh == 001x)',
              'S if (immh == 01xx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'H if (immh == 0001)',
              'S if (immh == 001x)',
              'D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11100|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'UCVTF <V><d>, <V><n>, #<fbits>',
        'variant' => 'Scalar',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'S if (immh == 01xx)',
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11111|immh!0000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111110|immh!0000|immb:3|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <V><d>, <V><n>, #<fbits>',
        'variant' => 'Scalar',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'immh',
            'range' => '',
            'values' => [
              'S if (immh == 01xx)',
              'D if (immh == 1xxx)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD scalar three different',
    'opcode' => '01|U|11110|size:2|1|Rm:5|opcode:4|00|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=1001|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=1001|00|Rn:5|Rd:5',
        'syntax' => 'SQDMLAL <Va><d>, <Vb><n>, <Vb><m>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1011|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=1011|00|Rn:5|Rd:5',
        'syntax' => 'SQDMLSL <Va><d>, <Vb><n>, <Vb><m>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1101|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=1101|00|Rn:5|Rd:5',
        'syntax' => 'SQDMULL <Va><d>, <Vb><n>, <Vb><m>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD scalar three same',
    'opcode' => '01|U|11110|size:2|1|Rm:5|opcode:5|1|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00001|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=00001|1|Rn:5|Rd:5',
        'syntax' => 'SQADD <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=00101|1|Rn:5|Rd:5',
        'syntax' => 'SQSUB <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'CMGT <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=00111|1|Rn:5|Rd:5',
        'syntax' => 'CMGE <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=01000|1|Rn:5|Rd:5',
        'syntax' => 'SSHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=01001|1|Rn:5|Rd:5',
        'syntax' => 'SQSHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'SRSHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=01011|1|Rn:5|Rd:5',
        'syntax' => 'SQRSHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=10000|1|Rn:5|Rd:5',
        'syntax' => 'ADD <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10001|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=10001|1|Rn:5|Rd:5',
        'syntax' => 'CMTST <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10110|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|1|Rm:5|opcode=10110|1|Rn:5|Rd:5',
        'syntax' => 'SQDMULH <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111100|sz|1|Rm:5|opcode=11011|1|Rn:5|Rd:5',
        'syntax' => 'FMULX <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111100|sz|1|Rm:5|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'FCMEQ <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11111|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111100|sz|1|Rm:5|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FRECPS <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11111|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|1|Rm:5|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FRSQRTS <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00001|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=00001|1|Rn:5|Rd:5',
        'syntax' => 'UQADD <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=00101|1|Rn:5|Rd:5',
        'syntax' => 'UQSUB <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'CMHI <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=00111|1|Rn:5|Rd:5',
        'syntax' => 'CMHS <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=01000|1|Rn:5|Rd:5',
        'syntax' => 'USHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=01001|1|Rn:5|Rd:5',
        'syntax' => 'UQSHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'URSHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=01011|1|Rn:5|Rd:5',
        'syntax' => 'UQRSHL <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=10000|1|Rn:5|Rd:5',
        'syntax' => 'SUB <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10001|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=10001|1|Rn:5|Rd:5',
        'syntax' => 'CMEQ <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10110|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|1|Rm:5|opcode=10110|1|Rn:5|Rd:5',
        'syntax' => 'SQRDMULH <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|1|Rm:5|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'FCMGE <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|1|Rm:5|opcode=11101|1|Rn:5|Rd:5',
        'syntax' => 'FACGE <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|1|Rm:5|opcode=11010|1|Rn:5|Rd:5',
        'syntax' => 'FABD <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|1|Rm:5|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'FCMGT <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|1|Rm:5|opcode=11101|1|Rn:5|Rd:5',
        'syntax' => 'FACGT <V><d>, <V><n>, <V><m>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD scalar two-register miscellaneous',
    'opcode' => '01|U|11110|size:2|10000|opcode:5|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00011|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|10000|opcode=00011|10|Rn:5|Rd:5',
        'syntax' => 'SUQADD <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|10000|opcode=00111|10|Rn:5|Rd:5',
        'syntax' => 'SQABS <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|10000|opcode=01000|10|Rn:5|Rd:5',
        'syntax' => 'CMGT <V><d>, <V><n>, #0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|10000|opcode=01001|10|Rn:5|Rd:5',
        'syntax' => 'CMEQ <V><d>, <V><n>, #0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|10000|opcode=01010|10|Rn:5|Rd:5',
        'syntax' => 'CMLT <V><d>, <V><n>, #0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|10000|opcode=01011|10|Rn:5|Rd:5',
        'syntax' => 'ABS <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11110|size:2|10000|opcode=10100|10|Rn:5|Rd:5',
        'syntax' => 'SQXTN <Vb><d>, <Va><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 00)',
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111100|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTNS <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111100|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTMS <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111100|sz|10000|opcode=11100|10|Rn:5|Rd:5',
        'syntax' => 'FCVTAS <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111100|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'SCVTF <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|10000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FCMGT <V><d>, <V><n>, #0.0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01101|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|10000|opcode=01101|10|Rn:5|Rd:5',
        'syntax' => 'FCMEQ <V><d>, <V><n>, #0.0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01110|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|10000|opcode=01110|10|Rn:5|Rd:5',
        'syntax' => 'FCMLT <V><d>, <V><n>, #0.0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTPS <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'FRECPE <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11111|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111101|sz|10000|opcode=11111|10|Rn:5|Rd:5',
        'syntax' => 'FRECPX <V><d>, <V><n>',
        'variant' => 'Scalar single-precision and double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|10000|opcode=00011|10|Rn:5|Rd:5',
        'syntax' => 'USQADD <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|10000|opcode=00111|10|Rn:5|Rd:5',
        'syntax' => 'SQNEG <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)',
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|10000|opcode=01000|10|Rn:5|Rd:5',
        'syntax' => 'CMGE <V><d>, <V><n>, #0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|10000|opcode=01001|10|Rn:5|Rd:5',
        'syntax' => 'CMLE <V><d>, <V><n>, #0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|10000|opcode=01011|10|Rn:5|Rd:5',
        'syntax' => 'NEG <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'D if (size == 11)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10010|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|10000|opcode=10010|10|Rn:5|Rd:5',
        'syntax' => 'SQXTUN <Vb><d>, <Va><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 00)',
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|11110|size:2|10000|opcode=10100|10|Rn:5|Rd:5',
        'syntax' => 'UQXTN <Vb><d>, <Va><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'B if (size == 00)',
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 00)',
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10110|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|10000|opcode=10110|10|Rn:5|Rd:5',
        'syntax' => 'FCVTXN <Vb><d>, <Va><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vb',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Va',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTNU <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTMU <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|10000|opcode=11100|10|Rn:5|Rd:5',
        'syntax' => 'FCVTAU <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111100|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'UCVTF <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|10000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FCMGE <V><d>, <V><n>, #0.0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01101|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|10000|opcode=01101|10|Rn:5|Rd:5',
        'syntax' => 'FCMLE <V><d>, <V><n>, #0.0',
        'variant' => 'Scalar',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTPU <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111101|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'FRSQRTE <V><d>, <V><n>',
        'variant' => 'Scalar',
        'form' => '',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD scalar x indexed element',
    'opcode' => '01|U|11111|size:2|L|M|Rm:4|opcode:4|H|0|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=0011|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11111|size:2|L|M|Rm:4|opcode=0011|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMLAL <Va><d>, <Vb><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0111|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11111|size:2|L|M|Rm:4|opcode=0111|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMLSL <Va><d>, <Vb><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1011|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11111|size:2|L|M|Rm:4|opcode=1011|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMULL <Va><d>, <Vb><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Va',
            'field' => 'size',
            'range' => '',
            'values' => [
              'S if (size == 01)',
              'D if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vb',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1100|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11111|size:2|L|M|Rm:4|opcode=1100|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMULH <V><d>, <V><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1101|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|11111|size:2|L|M|Rm:4|opcode=1101|H|0|Rn:5|Rd:5',
        'syntax' => 'SQRDMULH <V><d>, <V><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0001|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111111|sz|L|M|Rm:4|opcode=0001|H|0|Rn:5|Rd:5',
        'syntax' => 'FMLA <V><d>, <V><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0101|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111111|sz|L|M|Rm:4|opcode=0101|H|0|Rn:5|Rd:5',
        'syntax' => 'FMLS <V><d>, <V><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1001|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '01|U=0|111111|sz|L|M|Rm:4|opcode=1001|H|0|Rn:5|Rd:5',
        'syntax' => 'FMUL <V><d>, <V><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1001|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '01|U=1|111111|sz|L|M|Rm:4|opcode=1001|H|0|Rn:5|Rd:5',
        'syntax' => 'FMULX <V><d>, <V><n>, <Vm>.<Ts>[<index>]',
        'variant' => 'Scalar',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'V',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'n',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD shift by immediate',
    'opcode' => '0|Q|U|011110|immh!0000:4|immb:3|opcode:5|1|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=00000|1|Rn:5|Rd:5',
        'syntax' => 'SSHR <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=00010|1|Rn:5|Rd:5',
        'syntax' => 'SSRA <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=00100|1|Rn:5|Rd:5',
        'syntax' => 'SRSHR <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'SRSRA <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'SHL <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=01110|1|Rn:5|Rd:5',
        'syntax' => 'SQSHL <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=10000|1|Rn:5|Rd:5',
        'syntax' => 'SHRN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=10001|1|Rn:5|Rd:5',
        'syntax' => 'RSHRN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=10010|1|Rn:5|Rd:5',
        'syntax' => 'SQSHRN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=10011|1|Rn:5|Rd:5',
        'syntax' => 'SQRSHRN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=0',
        'aliases' => [
          {
            'conditions' => 'immb == 0b000 && BitCount(immh) == 1',
            'opcode' => '0|Q|U=0|011110|immh!0000|immb=000|opcode=10100|1|Rn:5|Rd:5',
            'syntax' => 'SXTL{2} <Vd>.<Ta>, <Vn>.<Tb>',
            'variant' => 'Vector',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Vd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Ta',
                'field' => 'immh',
                'range' => '',
                'values' => [
                  '8H if (immh == 0001)',
                  '4S if (immh == 001x)',
                  '2D if (immh == 01xx)'
                ]
              },
              {
                'name' => 'Vn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Tb',
                'field' => 'immh:Q',
                'range' => '',
                'values' => [
                  '8B if (immh == 0001 && Q == 0)',
                  '16B if (immh == 0001 && Q == 1)',
                  '4H if (immh == 001x && Q == 0)',
                  '8H if (immh == 001x && Q == 1)',
                  '2S if (immh == 01xx && Q == 0)',
                  '4S if (immh == 01xx && Q == 1)'
                ]
              }
            ]
          }
        ],
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=10100|1|Rn:5|Rd:5',
        'syntax' => 'SSHLL{2} <Vd>.<Ta>, <Vn>.<Tb>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Vd>.<T>, <Vn>.<T>, #<fbits>',
        'variant' => 'Vector',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11111|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011110|immh!0000|immb:3|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Vd>.<T>, <Vn>.<T>, #<fbits>',
        'variant' => 'Vector',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=00000|1|Rn:5|Rd:5',
        'syntax' => 'USHR <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=00010|1|Rn:5|Rd:5',
        'syntax' => 'USRA <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=00100|1|Rn:5|Rd:5',
        'syntax' => 'URSHR <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'URSRA <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=01000|1|Rn:5|Rd:5',
        'syntax' => 'SRI <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'SLI <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=01100|1|Rn:5|Rd:5',
        'syntax' => 'SQSHLU <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=01110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=01110|1|Rn:5|Rd:5',
        'syntax' => 'UQSHL <Vd>.<T>, <Vn>.<T>, #<shift>',
        'variant' => 'Vector',
        'form' => 'immediate',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)',
              '(UInt(immh:immb)-64) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=10000|1|Rn:5|Rd:5',
        'syntax' => 'SQSHRUN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10001|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=10001|1|Rn:5|Rd:5',
        'syntax' => 'SQRSHRUN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=10010|1|Rn:5|Rd:5',
        'syntax' => 'UQSHRN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=10011|1|Rn:5|Rd:5',
        'syntax' => 'UQRSHRN{2} <Vd>.<Tb>, <Vn>.<Ta>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(16-UInt(immh:immb)) if (immh == 0001)',
              '(32-UInt(immh:immb)) if (immh == 001x)',
              '(64-UInt(immh:immb)) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=1',
        'aliases' => [
          {
            'conditions' => 'immb == 0b000 && BitCount(immh) == 1',
            'opcode' => '0|Q|U=1|011110|immh!0000|immb=000|opcode=10100|1|Rn:5|Rd:5',
            'syntax' => 'UXTL{2} <Vd>.<Ta>, <Vn>.<Tb>',
            'variant' => 'Vector',
            'form' => '',
            'symbols' => [
              {
                'name' => 'Vd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'Ta',
                'field' => 'immh',
                'range' => '',
                'values' => [
                  '8H if (immh == 0001)',
                  '4S if (immh == 001x)',
                  '2D if (immh == 01xx)'
                ]
              },
              {
                'name' => 'Vn',
                'field' => 'Rn',
                'range' => ''
              },
              {
                'name' => 'Tb',
                'field' => 'immh:Q',
                'range' => '',
                'values' => [
                  '8B if (immh == 0001 && Q == 0)',
                  '16B if (immh == 0001 && Q == 1)',
                  '4H if (immh == 001x && Q == 0)',
                  '8H if (immh == 001x && Q == 1)',
                  '2S if (immh == 01xx && Q == 0)',
                  '4S if (immh == 01xx && Q == 1)'
                ]
              }
            ]
          }
        ],
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=10100|1|Rn:5|Rd:5',
        'syntax' => 'USHLL{2} <Vd>.<Ta>, <Vn>.<Tb>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'immh',
            'range' => '',
            'values' => [
              '8H if (immh == 0001)',
              '4S if (immh == 001x)',
              '2D if (immh == 01xx)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '8B if (immh == 0001 && Q == 0)',
              '16B if (immh == 0001 && Q == 1)',
              '4H if (immh == 001x && Q == 0)',
              '8H if (immh == 001x && Q == 1)',
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(UInt(immh:immb)-8) if (immh == 0001)',
              '(UInt(immh:immb)-16) if (immh == 001x)',
              '(UInt(immh:immb)-32) if (immh == 01xx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Vd>.<T>, <Vn>.<T>, #<fbits>',
        'variant' => 'Vector',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11111|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011110|immh!0000|immb:3|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Vd>.<T>, <Vn>.<T>, #<fbits>',
        'variant' => 'Vector',
        'form' => 'vector|fixed-point',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'immh:Q',
            'range' => '',
            'values' => [
              '2S if (immh == 01xx && Q == 0)',
              '4S if (immh == 01xx && Q == 1)',
              '2D if (immh == 1xxx && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'immh:immb',
            'range' => '',
            'values' => [
              '(64-UInt(immh:immb)) if (immh == 01xx)',
              '(128-UInt(immh:immb)) if (immh == 1xxx)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD table lookup',
    'opcode' => '0|Q|001110|op2:2|0|Rm:5|0|len:2|op|00|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'op=0|len=00|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=00|op=0|00|Rn:5|Rd:5',
        'syntax' => 'TBL <Vd>.<Ta>, { <Vn>.16B }, <Vm>.<Ta>',
        'variant' => 'Single register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=1|len=00|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=00|op=1|00|Rn:5|Rd:5',
        'syntax' => 'TBX <Vd>.<Ta>, { <Vn>.16B }, <Vm>.<Ta>',
        'variant' => 'Single register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=0|len=01|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=01|op=0|00|Rn:5|Rd:5',
        'syntax' => 'TBL <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B }, <Vm>.<Ta>',
        'variant' => 'Two register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vn+1',
            'field' => '(Rn + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=1|len=01|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=01|op=1|00|Rn:5|Rd:5',
        'syntax' => 'TBX <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B }, <Vm>.<Ta>',
        'variant' => 'Two register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vn+1',
            'field' => '(Rn + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=0|len=10|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=10|op=0|00|Rn:5|Rd:5',
        'syntax' => 'TBL <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B }, <Vm>.<Ta>',
        'variant' => 'Three register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vn+1',
            'field' => '(Rn + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vn+2',
            'field' => '(Rn + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=1|len=10|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=10|op=1|00|Rn:5|Rd:5',
        'syntax' => 'TBX <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B }, <Vm>.<Ta>',
        'variant' => 'Three register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vn+1',
            'field' => '(Rn + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vn+2',
            'field' => '(Rn + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=0|len=11|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=11|op=0|00|Rn:5|Rd:5',
        'syntax' => 'TBL <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B, <Vn+3>.16B }, <Vm>.<Ta>',
        'variant' => 'Four register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vn+1',
            'field' => '(Rn + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vn+2',
            'field' => '(Rn + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vn+3',
            'field' => '(Rn + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=1|len=11|op2=00',
        'aliases' => undef,
        'opcode' => '0|Q|001110|op2=00|0|Rm:5|0|len=11|op=1|00|Rn:5|Rd:5',
        'syntax' => 'TBX <Vd>.<Ta>, { <Vn>.16B, <Vn+1>.16B, <Vn+2>.16B, <Vn+3>.16B }, <Vm>.<Ta>',
        'variant' => 'Four register table',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vn+1',
            'field' => '(Rn + 1) % 32',
            'range' => ''
          },
          {
            'name' => 'Vn+2',
            'field' => '(Rn + 2) % 32',
            'range' => ''
          },
          {
            'name' => 'Vn+3',
            'field' => '(Rn + 3) % 32',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD three different',
    'opcode' => '0|Q|U|01110|size:2|1|Rm:5|opcode:4|00|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=0000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0000|00|Rn:5|Rd:5',
        'syntax' => 'SADDL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0001|00|Rn:5|Rd:5',
        'syntax' => 'SADDW{2} <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0010|00|Rn:5|Rd:5',
        'syntax' => 'SSUBL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0011|00|Rn:5|Rd:5',
        'syntax' => 'SSUBW{2} <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0100|00|Rn:5|Rd:5',
        'syntax' => 'ADDHN{2} <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0101|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0101|00|Rn:5|Rd:5',
        'syntax' => 'SABAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0110|00|Rn:5|Rd:5',
        'syntax' => 'SUBHN{2} <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=0111|00|Rn:5|Rd:5',
        'syntax' => 'SABDL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=1000|00|Rn:5|Rd:5',
        'syntax' => 'SMLAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=1001|00|Rn:5|Rd:5',
        'syntax' => 'SQDMLAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=1010|00|Rn:5|Rd:5',
        'syntax' => 'SMLSL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=1011|00|Rn:5|Rd:5',
        'syntax' => 'SQDMLSL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=1100|00|Rn:5|Rd:5',
        'syntax' => 'SMULL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1101|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=1101|00|Rn:5|Rd:5',
        'syntax' => 'SQDMULL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=1110|00|Rn:5|Rd:5',
        'syntax' => 'PMULL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '1Q if (size == 11)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '1D if (size == 11 && Q == 0)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0000|00|Rn:5|Rd:5',
        'syntax' => 'UADDL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0001|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0001|00|Rn:5|Rd:5',
        'syntax' => 'UADDW{2} <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0010|00|Rn:5|Rd:5',
        'syntax' => 'USUBL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0011|00|Rn:5|Rd:5',
        'syntax' => 'USUBW{2} <Vd>.<Ta>, <Vn>.<Ta>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0100|00|Rn:5|Rd:5',
        'syntax' => 'RADDHN{2} <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0101|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0101|00|Rn:5|Rd:5',
        'syntax' => 'UABAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0110|00|Rn:5|Rd:5',
        'syntax' => 'RSUBHN{2} <Vd>.<Tb>, <Vn>.<Ta>, <Vm>.<Ta>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=0111|00|Rn:5|Rd:5',
        'syntax' => 'UABDL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=1000|00|Rn:5|Rd:5',
        'syntax' => 'UMLAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=1010|00|Rn:5|Rd:5',
        'syntax' => 'UMLSL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=1100|00|Rn:5|Rd:5',
        'syntax' => 'UMULL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Tb>',
        'variant' => 'Three registers|not all the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD three same',
    'opcode' => '0|Q|U|01110|size:2|1|Rm:5|opcode:5|1|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=00000|1|Rn:5|Rd:5',
        'syntax' => 'SHADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=00001|1|Rn:5|Rd:5',
        'syntax' => 'SQADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=00010|1|Rn:5|Rd:5',
        'syntax' => 'SRHADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=00100|1|Rn:5|Rd:5',
        'syntax' => 'SHSUB <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=00101|1|Rn:5|Rd:5',
        'syntax' => 'SQSUB <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'CMGT <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=00111|1|Rn:5|Rd:5',
        'syntax' => 'CMGE <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01000|1|Rn:5|Rd:5',
        'syntax' => 'SSHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01001|1|Rn:5|Rd:5',
        'syntax' => 'SQSHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'SRSHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01011|1|Rn:5|Rd:5',
        'syntax' => 'SQRSHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01100|1|Rn:5|Rd:5',
        'syntax' => 'SMAX <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01101|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01101|1|Rn:5|Rd:5',
        'syntax' => 'SMIN <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01110|1|Rn:5|Rd:5',
        'syntax' => 'SABD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01111|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=01111|1|Rn:5|Rd:5',
        'syntax' => 'SABA <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10000|1|Rn:5|Rd:5',
        'syntax' => 'ADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10001|1|Rn:5|Rd:5',
        'syntax' => 'CMTST <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10010|1|Rn:5|Rd:5',
        'syntax' => 'MLA <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10011|1|Rn:5|Rd:5',
        'syntax' => 'MUL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10100|1|Rn:5|Rd:5',
        'syntax' => 'SMAXP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10101|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10101|1|Rn:5|Rd:5',
        'syntax' => 'SMINP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10110|1|Rn:5|Rd:5',
        'syntax' => 'SQDMULH <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10111|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|1|Rm:5|opcode=10111|1|Rn:5|Rd:5',
        'syntax' => 'ADDP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11000|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|1|Rm:5|opcode=11000|1|Rn:5|Rd:5',
        'syntax' => 'FMAXNM <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11001|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|1|Rm:5|opcode=11001|1|Rn:5|Rd:5',
        'syntax' => 'FMLA <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|1|Rm:5|opcode=11010|1|Rn:5|Rd:5',
        'syntax' => 'FADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|1|Rm:5|opcode=11011|1|Rn:5|Rd:5',
        'syntax' => 'FMULX <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|1|Rm:5|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'FCMEQ <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11110|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|1|Rm:5|opcode=11110|1|Rn:5|Rd:5',
        'syntax' => 'FMAX <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11111|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|1|Rm:5|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FRECPS <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=00|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size=00|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'AND <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=01|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size=01|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'BIC <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector|register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11000|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|1|Rm:5|opcode=11000|1|Rn:5|Rd:5',
        'syntax' => 'FMINNM <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11001|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|1|Rm:5|opcode=11001|1|Rn:5|Rd:5',
        'syntax' => 'FMLS <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|1|Rm:5|opcode=11010|1|Rn:5|Rd:5',
        'syntax' => 'FSUB <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11110|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|1|Rm:5|opcode=11110|1|Rn:5|Rd:5',
        'syntax' => 'FMIN <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11111|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|1|Rm:5|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FRSQRTS <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=10|U=0',
        'aliases' => [
          {
            'conditions' => 'Rm == Rn',
            'opcode' => '0|Q|U=0|01110|size=10|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
            'syntax' => 'MOV <Vd>.<T>, <Vn>.<T>',
            'variant' => 'Three registers of the same type',
            'form' => 'vector',
            'symbols' => [
              {
                'name' => 'Vd',
                'field' => 'Rd',
                'range' => ''
              },
              {
                'name' => 'T',
                'field' => 'Q',
                'range' => '',
                'values' => [
                  '8B if (Q == 0)',
                  '16B if (Q == 1)'
                ]
              },
              {
                'name' => 'Vn',
                'field' => 'Rn',
                'range' => ''
              }
            ]
          }
        ],
        'opcode' => '0|Q|U=0|01110|size=10|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'ORR <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector|register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=11|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size=11|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'ORN <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=00000|1|Rn:5|Rd:5',
        'syntax' => 'UHADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00001|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=00001|1|Rn:5|Rd:5',
        'syntax' => 'UQADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=00010|1|Rn:5|Rd:5',
        'syntax' => 'URHADD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=00100|1|Rn:5|Rd:5',
        'syntax' => 'UHSUB <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=00101|1|Rn:5|Rd:5',
        'syntax' => 'UQSUB <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=00110|1|Rn:5|Rd:5',
        'syntax' => 'CMHI <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=00111|1|Rn:5|Rd:5',
        'syntax' => 'CMHS <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01000|1|Rn:5|Rd:5',
        'syntax' => 'USHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01001|1|Rn:5|Rd:5',
        'syntax' => 'UQSHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01010|1|Rn:5|Rd:5',
        'syntax' => 'URSHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01011|1|Rn:5|Rd:5',
        'syntax' => 'UQRSHL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01100|1|Rn:5|Rd:5',
        'syntax' => 'UMAX <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01101|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01101|1|Rn:5|Rd:5',
        'syntax' => 'UMIN <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01110|1|Rn:5|Rd:5',
        'syntax' => 'UABD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01111|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=01111|1|Rn:5|Rd:5',
        'syntax' => 'UABA <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=10000|1|Rn:5|Rd:5',
        'syntax' => 'SUB <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10001|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=10001|1|Rn:5|Rd:5',
        'syntax' => 'CMEQ <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=10010|1|Rn:5|Rd:5',
        'syntax' => 'MLS <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=10011|1|Rn:5|Rd:5',
        'syntax' => 'PMUL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=10100|1|Rn:5|Rd:5',
        'syntax' => 'UMAXP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10101|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=10101|1|Rn:5|Rd:5',
        'syntax' => 'UMINP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|1|Rm:5|opcode=10110|1|Rn:5|Rd:5',
        'syntax' => 'SQRDMULH <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11000|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|1|Rm:5|opcode=11000|1|Rn:5|Rd:5',
        'syntax' => 'FMAXNMP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|1|Rm:5|opcode=11010|1|Rn:5|Rd:5',
        'syntax' => 'FADDP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|1|Rm:5|opcode=11011|1|Rn:5|Rd:5',
        'syntax' => 'FMUL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|1|Rm:5|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'FCMGE <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|1|Rm:5|opcode=11101|1|Rn:5|Rd:5',
        'syntax' => 'FACGE <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11110|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|1|Rm:5|opcode=11110|1|Rn:5|Rd:5',
        'syntax' => 'FMAXP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11111|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|1|Rm:5|opcode=11111|1|Rn:5|Rd:5',
        'syntax' => 'FDIV <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=00|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size=00|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'EOR <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=01|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size=01|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'BSL <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11000|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|1|Rm:5|opcode=11000|1|Rn:5|Rd:5',
        'syntax' => 'FMINNMP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|1|Rm:5|opcode=11010|1|Rn:5|Rd:5',
        'syntax' => 'FABD <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|1|Rm:5|opcode=11100|1|Rn:5|Rd:5',
        'syntax' => 'FCMGT <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|1|Rm:5|opcode=11101|1|Rn:5|Rd:5',
        'syntax' => 'FACGT <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11110|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|1|Rm:5|opcode=11110|1|Rn:5|Rd:5',
        'syntax' => 'FMINP <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=10|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size=10|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'BIT <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00011|size=11|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size=11|1|Rm:5|opcode=00011|1|Rn:5|Rd:5',
        'syntax' => 'BIF <Vd>.<T>, <Vn>.<T>, <Vm>.<T>',
        'variant' => 'Three registers of the same type',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD two-register miscellaneous',
    'opcode' => '0|Q|U|01110|size:2|10000|opcode:5|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00000|10|Rn:5|Rd:5',
        'syntax' => 'REV64 <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00001|10|Rn:5|Rd:5',
        'syntax' => 'REV16 <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00010|10|Rn:5|Rd:5',
        'syntax' => 'SADDLP <Vd>.<Ta>, <Vn>.<Tb>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 00 && Q == 0)',
              '8H if (size == 00 && Q == 1)',
              '2S if (size == 01 && Q == 0)',
              '4S if (size == 01 && Q == 1)',
              '1D if (size == 10 && Q == 0)',
              '2D if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00011|10|Rn:5|Rd:5',
        'syntax' => 'SUQADD <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00100|10|Rn:5|Rd:5',
        'syntax' => 'CLS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00101|10|Rn:5|Rd:5',
        'syntax' => 'CNT <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00110|10|Rn:5|Rd:5',
        'syntax' => 'SADALP <Vd>.<Ta>, <Vn>.<Tb>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 00 && Q == 0)',
              '8H if (size == 00 && Q == 1)',
              '2S if (size == 01 && Q == 0)',
              '4S if (size == 01 && Q == 1)',
              '1D if (size == 10 && Q == 0)',
              '2D if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=00111|10|Rn:5|Rd:5',
        'syntax' => 'SQABS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=01000|10|Rn:5|Rd:5',
        'syntax' => 'CMGT <Vd>.<T>, <Vn>.<T>, #0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=01001|10|Rn:5|Rd:5',
        'syntax' => 'CMEQ <Vd>.<T>, <Vn>.<T>, #0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=01010|10|Rn:5|Rd:5',
        'syntax' => 'CMLT <Vd>.<T>, <Vn>.<T>, #0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=01011|10|Rn:5|Rd:5',
        'syntax' => 'ABS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=10010|10|Rn:5|Rd:5',
        'syntax' => 'XTN{2} <Vd>.<Tb>, <Vn>.<Ta>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01110|size:2|10000|opcode=10100|10|Rn:5|Rd:5',
        'syntax' => 'SQXTN{2} <Vd>.<Tb>, <Vn>.<Ta>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10110|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=10110|10|Rn:5|Rd:5',
        'syntax' => 'FCVTN{2} <Vd>.<Tb>, <Vn>.<Ta>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '4H if (sz == 0 && Q == 0)',
              '8H if (sz == 0 && Q == 1)',
              '2S if (sz == 1 && Q == 0)',
              '4S if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '4S if (sz == 0)',
              '2D if (sz == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10111|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=10111|10|Rn:5|Rd:5',
        'syntax' => 'FCVTL{2} <Vd>.<Ta>, <Vn>.<Tb>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '4S if (sz == 0)',
              '2D if (sz == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '4H if (sz == 0 && Q == 0)',
              '8H if (sz == 0 && Q == 1)',
              '2S if (sz == 1 && Q == 0)',
              '4S if (sz == 1 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11000|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=11000|10|Rn:5|Rd:5',
        'syntax' => 'FRINTN <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11001|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=11001|10|Rn:5|Rd:5',
        'syntax' => 'FRINTM <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTNS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTMS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=11100|10|Rn:5|Rd:5',
        'syntax' => 'FCVTAS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=0x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011100|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FCMGT <Vd>.<T>, <Vn>.<T>, #0.0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01101|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=01101|10|Rn:5|Rd:5',
        'syntax' => 'FCMEQ <Vd>.<T>, <Vn>.<T>, #0.0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01110|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=01110|10|Rn:5|Rd:5',
        'syntax' => 'FCMLT <Vd>.<T>, <Vn>.<T>, #0.0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01111|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=01111|10|Rn:5|Rd:5',
        'syntax' => 'FABS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11000|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=11000|10|Rn:5|Rd:5',
        'syntax' => 'FRINTP <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11001|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=11001|10|Rn:5|Rd:5',
        'syntax' => 'FRINTZ <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTPS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=11100|10|Rn:5|Rd:5',
        'syntax' => 'URECPE <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011101|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'FRECPE <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=00000|10|Rn:5|Rd:5',
        'syntax' => 'REV32 <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=00010|10|Rn:5|Rd:5',
        'syntax' => 'UADDLP <Vd>.<Ta>, <Vn>.<Tb>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 00 && Q == 0)',
              '8H if (size == 00 && Q == 1)',
              '2S if (size == 01 && Q == 0)',
              '4S if (size == 01 && Q == 1)',
              '1D if (size == 10 && Q == 0)',
              '2D if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=00011|10|Rn:5|Rd:5',
        'syntax' => 'USQADD <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=00100|10|Rn:5|Rd:5',
        'syntax' => 'CLZ <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=00110|10|Rn:5|Rd:5',
        'syntax' => 'UADALP <Vd>.<Ta>, <Vn>.<Tb>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 00 && Q == 0)',
              '8H if (size == 00 && Q == 1)',
              '2S if (size == 01 && Q == 0)',
              '4S if (size == 01 && Q == 1)',
              '1D if (size == 10 && Q == 0)',
              '2D if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=00111|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=00111|10|Rn:5|Rd:5',
        'syntax' => 'SQNEG <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=01000|10|Rn:5|Rd:5',
        'syntax' => 'CMGE <Vd>.<T>, <Vn>.<T>, #0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01001|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=01001|10|Rn:5|Rd:5',
        'syntax' => 'CMLE <Vd>.<T>, <Vn>.<T>, #0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=01011|10|Rn:5|Rd:5',
        'syntax' => 'NEG <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)',
              '2D if (size == 11 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=10010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=10010|10|Rn:5|Rd:5',
        'syntax' => 'SQXTUN{2} <Vd>.<Tb>, <Vn>.<Ta>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10011|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=10011|10|Rn:5|Rd:5',
        'syntax' => 'SHLL{2} <Vd>.<Ta>, <Vn>.<Tb>, #<shift>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'shift',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8 if (size == 00)',
              '16 if (size == 01)',
              '32 if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size:2|10000|opcode=10100|10|Rn:5|Rd:5',
        'syntax' => 'UQXTN{2} <Vd>.<Tb>, <Vn>.<Ta>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '8B if (size == 00 && Q == 0)',
              '16B if (size == 00 && Q == 1)',
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '8H if (size == 00)',
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=10110|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|10000|opcode=10110|10|Rn:5|Rd:5',
        'syntax' => 'FCVTXN{2} <Vd>.<Tb>, <Vn>.<Ta>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 1 && Q == 0)',
              '4S if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'sz',
            'range' => '',
            'values' => [
              '2D if (sz == 1)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=11000|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|10000|opcode=11000|10|Rn:5|Rd:5',
        'syntax' => 'FRINTA <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11001|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|10000|opcode=11001|10|Rn:5|Rd:5',
        'syntax' => 'FRINTX <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTNU <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTMU <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|10000|opcode=11100|10|Rn:5|Rd:5',
        'syntax' => 'FCVTAU <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=0x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011100|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|size=00|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size=00|10000|opcode=00101|10|Rn:5|Rd:5',
        'syntax' => 'NOT <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|size=01|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01110|size=01|10000|opcode=00101|10|Rn:5|Rd:5',
        'syntax' => 'RBIT <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q',
            'range' => '',
            'values' => [
              '8B if (Q == 0)',
              '16B if (Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01100|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=01100|10|Rn:5|Rd:5',
        'syntax' => 'FCMGE <Vd>.<T>, <Vn>.<T>, #0.0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01101|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=01101|10|Rn:5|Rd:5',
        'syntax' => 'FCMLE <Vd>.<T>, <Vn>.<T>, #0.0',
        'variant' => 'Vector',
        'form' => 'zero',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=01111|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=01111|10|Rn:5|Rd:5',
        'syntax' => 'FNEG <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11001|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=11001|10|Rn:5|Rd:5',
        'syntax' => 'FRINTI <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11010|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=11010|10|Rn:5|Rd:5',
        'syntax' => 'FCVTPU <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11011|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=11011|10|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => 'vector|integer',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11100|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=11100|10|Rn:5|Rd:5',
        'syntax' => 'URSQRTE <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11101|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=11101|10|Rn:5|Rd:5',
        'syntax' => 'FRSQRTE <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=11111|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011101|sz|10000|opcode=11111|10|Rn:5|Rd:5',
        'syntax' => 'FSQRT <Vd>.<T>, <Vn>.<T>',
        'variant' => 'Vector single-precision and double-precision',
        'form' => 'vector',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'sz:Q',
            'range' => '',
            'values' => [
              '2S if (sz == 0 && Q == 0)',
              '4S if (sz == 0 && Q == 1)',
              '2D if (sz == 1 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Advanced SIMD vector x indexed element',
    'opcode' => '0|Q|U|01111|size:2|L|M|Rm:4|opcode:4|H|0|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=0010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=0010|H|0|Rn:5|Rd:5',
        'syntax' => 'SMLAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=0011|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMLAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0110|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=0110|H|0|Rn:5|Rd:5',
        'syntax' => 'SMLSL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0111|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=0111|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMLSL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1000|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=1000|H|0|Rn:5|Rd:5',
        'syntax' => 'MUL <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1010|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=1010|H|0|Rn:5|Rd:5',
        'syntax' => 'SMULL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1011|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=1011|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMULL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1100|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=1100|H|0|Rn:5|Rd:5',
        'syntax' => 'SQDMULH <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1101|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|01111|size:2|L|M|Rm:4|opcode=1101|H|0|Rn:5|Rd:5',
        'syntax' => 'SQRDMULH <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0001|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011111|sz|L|M|Rm:4|opcode=0001|H|0|Rn:5|Rd:5',
        'syntax' => 'FMLA <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '2S if (Q == 0 && sz == 0)',
              '4S if (Q == 1 && sz == 0)',
              '2D if (Q == 1 && sz == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0101|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011111|sz|L|M|Rm:4|opcode=0101|H|0|Rn:5|Rd:5',
        'syntax' => 'FMLS <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '2S if (Q == 0 && sz == 0)',
              '4S if (Q == 1 && sz == 0)',
              '2D if (Q == 1 && sz == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1001|size=1x|U=0',
        'aliases' => undef,
        'opcode' => '0|Q|U=0|011111|sz|L|M|Rm:4|opcode=1001|H|0|Rn:5|Rd:5',
        'syntax' => 'FMUL <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '2S if (Q == 0 && sz == 0)',
              '4S if (Q == 1 && sz == 0)',
              '2D if (Q == 1 && sz == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0000|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01111|size:2|L|M|Rm:4|opcode=0000|H|0|Rn:5|Rd:5',
        'syntax' => 'MLA <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01111|size:2|L|M|Rm:4|opcode=0010|H|0|Rn:5|Rd:5',
        'syntax' => 'UMLAL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0100|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01111|size:2|L|M|Rm:4|opcode=0100|H|0|Rn:5|Rd:5',
        'syntax' => 'MLS <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=0110|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01111|size:2|L|M|Rm:4|opcode=0110|H|0|Rn:5|Rd:5',
        'syntax' => 'UMLSL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1010|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|01111|size:2|L|M|Rm:4|opcode=1010|H|0|Rn:5|Rd:5',
        'syntax' => 'UMULL{2} <Vd>.<Ta>, <Vn>.<Tb>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Ta',
            'field' => 'size',
            'range' => '',
            'values' => [
              '4S if (size == 01)',
              '2D if (size == 10)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Tb',
            'field' => 'size:Q',
            'range' => '',
            'values' => [
              '4H if (size == 01 && Q == 0)',
              '8H if (size == 01 && Q == 1)',
              '2S if (size == 10 && Q == 0)',
              '4S if (size == 10 && Q == 1)'
            ]
          },
          {
            'name' => 'Vm',
            'field' => 'size:M:Rm',
            'range' => '',
            'values' => [
              '0:Rm if (size == 01)',
              'M:Rm if (size == 10)'
            ]
          },
          {
            'name' => 'Ts',
            'field' => 'size',
            'range' => '',
            'values' => [
              'H if (size == 01)',
              'S if (size == 10)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'size:L:H:M',
            'range' => '',
            'values' => [
              'H:L:M if (size == 01)',
              'H:L if (size == 10)'
            ]
          }
        ]
      },
      {
        'fields' => 'opcode=1001|size=1x|U=1',
        'aliases' => undef,
        'opcode' => '0|Q|U=1|011111|sz|L|M|Rm:4|opcode=1001|H|0|Rn:5|Rd:5',
        'syntax' => 'FMULX <Vd>.<T>, <Vn>.<T>, <Vm>.<Ts>[<index>]',
        'variant' => 'Vector',
        'form' => 'by element',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'T',
            'field' => 'Q:sz',
            'range' => '',
            'values' => [
              '2S if (Q == 0 && sz == 0)',
              '4S if (Q == 1 && sz == 0)',
              '2D if (Q == 1 && sz == 1)'
            ]
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'M:Rm',
            'range' => ''
          },
          {
            'name' => 'Ts',
            'field' => 'sz',
            'range' => '',
            'values' => [
              'S if (sz == 0)',
              'D if (sz == 1)'
            ]
          },
          {
            'name' => 'index',
            'field' => 'sz:L:H',
            'range' => '',
            'values' => [
              'H:L if (sz == 0 && L == x)',
              'H if (sz == 1 && L == 0)'
            ]
          }
        ]
      }
    ]
  },
  {
    'name' => 'Cryptographic AES',
    'opcode' => '01001110|size:2|10100|opcode:5|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00100|size=00',
        'aliases' => undef,
        'opcode' => '01001110|size=00|10100|opcode=00100|10|Rn:5|Rd:5',
        'syntax' => 'AESE <Vd>.16B, <Vn>.16B',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00101|size=00',
        'aliases' => undef,
        'opcode' => '01001110|size=00|10100|opcode=00101|10|Rn:5|Rd:5',
        'syntax' => 'AESD <Vd>.16B, <Vn>.16B',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00110|size=00',
        'aliases' => undef,
        'opcode' => '01001110|size=00|10100|opcode=00110|10|Rn:5|Rd:5',
        'syntax' => 'AESMC <Vd>.16B, <Vn>.16B',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00111|size=00',
        'aliases' => undef,
        'opcode' => '01001110|size=00|10100|opcode=00111|10|Rn:5|Rd:5',
        'syntax' => 'AESIMC <Vd>.16B, <Vn>.16B',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Cryptographic three-register SHA',
    'opcode' => '01011110|size:2|0|Rm:5|0|opcode:3|00|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=000|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|0|Rm:5|0|opcode=000|00|Rn:5|Rd:5',
        'syntax' => 'SHA1C <Qd>, <Sn>, <Vm>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Qd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|0|Rm:5|0|opcode=001|00|Rn:5|Rd:5',
        'syntax' => 'SHA1P <Qd>, <Sn>, <Vm>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Qd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|0|Rm:5|0|opcode=010|00|Rn:5|Rd:5',
        'syntax' => 'SHA1M <Qd>, <Sn>, <Vm>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Qd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=011|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|0|Rm:5|0|opcode=011|00|Rn:5|Rd:5',
        'syntax' => 'SHA1SU0 <Vd>.4S, <Vn>.4S, <Vm>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=100|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|0|Rm:5|0|opcode=100|00|Rn:5|Rd:5',
        'syntax' => 'SHA256H <Qd>, <Qn>, <Vm>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Qd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Qn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=101|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|0|Rm:5|0|opcode=101|00|Rn:5|Rd:5',
        'syntax' => 'SHA256H2 <Qd>, <Qn>, <Vm>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Qd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Qn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=110|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|0|Rm:5|0|opcode=110|00|Rn:5|Rd:5',
        'syntax' => 'SHA256SU1 <Vd>.4S, <Vn>.4S, <Vm>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Vm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Cryptographic two-register SHA',
    'opcode' => '01011110|size:2|10100|opcode:5|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=00000|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|10100|opcode=00000|10|Rn:5|Rd:5',
        'syntax' => 'SHA1H <Sd>, <Sn>',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00001|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|10100|opcode=00001|10|Rn:5|Rd:5',
        'syntax' => 'SHA1SU1 <Vd>.4S, <Vn>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=00010|size=00',
        'aliases' => undef,
        'opcode' => '01011110|size=00|10100|opcode=00010|10|Rn:5|Rd:5',
        'syntax' => 'SHA256SU0 <Vd>.4S, <Vn>.4S',
        'variant' => 'Advanced SIMD',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Floating-point compare',
    'opcode' => 'M|0|S|11110|type:2|1|Rm:5|op:2|1000|Rn:5|opcode2:5',
    'instructions' => [
      {
        'fields' => 'opcode2=00000|op=00|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|op=00|1000|Rn:5|opcode2=0x000',
        'syntax' => 'FCMP <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=01000|op=00|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm=00000|op=00|1000|Rn:5|opcode2=0x000',
        'syntax' => 'FCMP <Sn>, #0.0',
        'variant' => 'Single-precision|zero',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=10000|op=00|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|op=00|1000|Rn:5|opcode2=1x000',
        'syntax' => 'FCMPE <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=11000|op=00|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm=00000|op=00|1000|Rn:5|opcode2=1x000',
        'syntax' => 'FCMPE <Sn>, #0.0',
        'variant' => 'Single-precision|zero',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=00000|op=00|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|op=00|1000|Rn:5|opcode2=0x000',
        'syntax' => 'FCMP <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=01000|op=00|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm=00000|op=00|1000|Rn:5|opcode2=0x000',
        'syntax' => 'FCMP <Dn>, #0.0',
        'variant' => 'Double-precision|zero',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=10000|op=00|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|op=00|1000|Rn:5|opcode2=1x000',
        'syntax' => 'FCMPE <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode2=11000|op=00|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm=00000|op=00|1000|Rn:5|opcode2=1x000',
        'syntax' => 'FCMPE <Dn>, #0.0',
        'variant' => 'Double-precision|zero',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Floating-point conditional compare',
    'opcode' => 'M|0|S|11110|type:2|1|Rm:5|cond:4|01|Rn:5|op|nzcv:4',
    'instructions' => [
      {
        'fields' => 'op=0|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|cond:4|01|Rn:5|op=0|nzcv:4',
        'syntax' => 'FCCMP <Sn>, <Sm>, #<nzcv>, <cond>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=1|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|cond:4|01|Rn:5|op=1|nzcv:4',
        'syntax' => 'FCCMPE <Sn>, <Sm>, #<nzcv>, <cond>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=0|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|cond:4|01|Rn:5|op=0|nzcv:4',
        'syntax' => 'FCCMP <Dn>, <Dm>, #<nzcv>, <cond>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'op=1|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|cond:4|01|Rn:5|op=1|nzcv:4',
        'syntax' => 'FCCMPE <Dn>, <Dm>, #<nzcv>, <cond>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'nzcv',
            'field' => 'nzcv',
            'range' => '0 .. 15'
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Floating-point conditional select',
    'opcode' => 'M|0|S|11110|type:2|1|Rm:5|cond:4|11|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|cond:4|11|Rn:5|Rd:5',
        'syntax' => 'FCSEL <Sd>, <Sn>, <Sm>, <cond>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|cond:4|11|Rn:5|Rd:5',
        'syntax' => 'FCSEL <Dd>, <Dn>, <Dm>, <cond>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'cond',
            'field' => 'cond',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Floating-point data-processing (1 source)',
    'opcode' => 'M|0|S|11110|type:2|1|opcode:6|10000|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=000000|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=000000|10000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000001|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=000001|10000|Rn:5|Rd:5',
        'syntax' => 'FABS <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000010|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=000010|10000|Rn:5|Rd:5',
        'syntax' => 'FNEG <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000011|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=000011|10000|Rn:5|Rd:5',
        'syntax' => 'FSQRT <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000101|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|10001|opc=01|10000|Rn:5|Rd:5',
        'syntax' => 'FCVT <Dd>, <Sn>',
        'variant' => 'Single-precision to double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000111|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|10001|opc=11|10000|Rn:5|Rd:5',
        'syntax' => 'FCVT <Hd>, <Sn>',
        'variant' => 'Single-precision to half-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Hd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001000|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=001000|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTN <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001001|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=001001|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTP <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001010|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=001010|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTM <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001011|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=001011|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTZ <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001100|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=001100|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTA <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001110|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=001110|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTX <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001111|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|opcode=001111|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTI <Sd>, <Sn>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000000|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=000000|10000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'register',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000001|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=000001|10000|Rn:5|Rd:5',
        'syntax' => 'FABS <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000010|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=000010|10000|Rn:5|Rd:5',
        'syntax' => 'FNEG <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000011|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=000011|10000|Rn:5|Rd:5',
        'syntax' => 'FSQRT <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000100|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|10001|opc=00|10000|Rn:5|Rd:5',
        'syntax' => 'FCVT <Sd>, <Dn>',
        'variant' => 'Double-precision to single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000111|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|10001|opc=11|10000|Rn:5|Rd:5',
        'syntax' => 'FCVT <Hd>, <Dn>',
        'variant' => 'Double-precision to half-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Hd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001000|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=001000|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTN <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001001|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=001001|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTP <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001010|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=001010|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTM <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001011|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=001011|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTZ <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001100|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=001100|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTA <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001110|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=001110|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTX <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001111|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|opcode=001111|10000|Rn:5|Rd:5',
        'syntax' => 'FRINTI <Dd>, <Dn>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000100|type=11|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=11|10001|opc=00|10000|Rn:5|Rd:5',
        'syntax' => 'FCVT <Sd>, <Hn>',
        'variant' => 'Half-precision to single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Hn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000101|type=11|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=11|10001|opc=01|10000|Rn:5|Rd:5',
        'syntax' => 'FCVT <Dd>, <Hn>',
        'variant' => 'Half-precision to double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Hn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Floating-point data-processing (2 source)',
    'opcode' => 'M|0|S|11110|type:2|1|Rm:5|opcode:4|10|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=0000|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0000|10|Rn:5|Rd:5',
        'syntax' => 'FMUL <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0001|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0001|10|Rn:5|Rd:5',
        'syntax' => 'FDIV <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0010|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0010|10|Rn:5|Rd:5',
        'syntax' => 'FADD <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0011|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0011|10|Rn:5|Rd:5',
        'syntax' => 'FSUB <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0100|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0100|10|Rn:5|Rd:5',
        'syntax' => 'FMAX <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0101|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0101|10|Rn:5|Rd:5',
        'syntax' => 'FMIN <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0110|10|Rn:5|Rd:5',
        'syntax' => 'FMAXNM <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=0111|10|Rn:5|Rd:5',
        'syntax' => 'FMINNM <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|Rm:5|opcode=1000|10|Rn:5|Rd:5',
        'syntax' => 'FNMUL <Sd>, <Sn>, <Sm>',
        'variant' => 'Single-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0000|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0000|10|Rn:5|Rd:5',
        'syntax' => 'FMUL <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0001|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0001|10|Rn:5|Rd:5',
        'syntax' => 'FDIV <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0010|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0010|10|Rn:5|Rd:5',
        'syntax' => 'FADD <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0011|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0011|10|Rn:5|Rd:5',
        'syntax' => 'FSUB <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0100|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0100|10|Rn:5|Rd:5',
        'syntax' => 'FMAX <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0101|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0101|10|Rn:5|Rd:5',
        'syntax' => 'FMIN <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0110|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0110|10|Rn:5|Rd:5',
        'syntax' => 'FMAXNM <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=0111|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=0111|10|Rn:5|Rd:5',
        'syntax' => 'FMINNM <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=1000|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|Rm:5|opcode=1000|10|Rn:5|Rd:5',
        'syntax' => 'FNMUL <Dd>, <Dn>, <Dm>',
        'variant' => 'Double-precision',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Floating-point data-processing (3 source)',
    'opcode' => 'M|0|S|11111|type:2|o1|Rm:5|o0|Ra:5|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'o0=0|o1=0|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=00|o1=0|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FMADD <Sd>, <Sn>, <Sm>, <Sa>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Sa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=00|o1=0|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FMSUB <Sd>, <Sn>, <Sm>, <Sa>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Sa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=1|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=00|o1=1|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FNMADD <Sd>, <Sn>, <Sm>, <Sa>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Sa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=1|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=00|o1=1|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FNMSUB <Sd>, <Sn>, <Sm>, <Sa>',
        'variant' => 'Single-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Sm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Sa',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=0|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=01|o1=0|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FMADD <Dd>, <Dn>, <Dm>, <Da>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Da',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=0|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=01|o1=0|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FMSUB <Dd>, <Dn>, <Dm>, <Da>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Da',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=0|o1=1|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=01|o1=1|Rm:5|o0=0|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FNMADD <Dd>, <Dn>, <Dm>, <Da>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Da',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'o0=1|o1=1|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11111|type=01|o1=1|Rm:5|o0=1|Ra:5|Rn:5|Rd:5',
        'syntax' => 'FNMSUB <Dd>, <Dn>, <Dm>, <Da>',
        'variant' => 'Double-precision',
        'form' => '',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'Dm',
            'field' => 'Rm',
            'range' => ''
          },
          {
            'name' => 'Da',
            'field' => 'Ra',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Floating-point immediate',
    'opcode' => 'M|0|S|11110|type:2|1|imm8:8|100|imm5:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'imm5=00000|type=00|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=00|1|imm8:8|100|imm5=00000|Rd:5',
        'syntax' => 'FMOV <Sd>, #<imm>',
        'variant' => 'Single-precision',
        'form' => 'scalar|immediate',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm8',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'imm5=00000|type=01|S=0|M=0',
        'aliases' => undef,
        'opcode' => 'M=0|0|S=0|11110|type=01|1|imm8:8|100|imm5=00000|Rd:5',
        'syntax' => 'FMOV <Dd>, #<imm>',
        'variant' => 'Double-precision',
        'form' => 'scalar|immediate',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'imm',
            'field' => 'imm8',
            'range' => ''
          }
        ]
      }
    ]
  },
  {
    'name' => 'Conversion between floating-point and fixed-point',
    'opcode' => 'sf|0|S|11110|type:2|0|rmode:2|opcode:3|scale:6|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=010|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|0|rmode=00|opcode=010|scale:6|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Sd>, <Wn>, #<fbits>',
        'variant' => '32-bit to single-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|0|rmode=00|opcode=011|scale:6|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Sd>, <Wn>, #<fbits>',
        'variant' => '32-bit to single-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|0|rmode=11|opcode=000|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Wd>, <Sn>, #<fbits>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|0|rmode=11|opcode=001|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Wd>, <Sn>, #<fbits>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=010|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|0|rmode=00|opcode=010|scale:6|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Dd>, <Wn>, #<fbits>',
        'variant' => '32-bit to double-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|0|rmode=00|opcode=011|scale:6|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Dd>, <Wn>, #<fbits>',
        'variant' => '32-bit to double-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|0|rmode=11|opcode=000|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Wd>, <Dn>, #<fbits>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|0|rmode=11|opcode=001|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Wd>, <Dn>, #<fbits>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 32'
          }
        ]
      },
      {
        'fields' => 'opcode=010|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|0|rmode=00|opcode=010|scale:6|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Sd>, <Xn>, #<fbits>',
        'variant' => '64-bit to single-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|0|rmode=00|opcode=011|scale:6|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Sd>, <Xn>, #<fbits>',
        'variant' => '64-bit to single-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|0|rmode=11|opcode=000|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Xd>, <Sn>, #<fbits>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|0|rmode=11|opcode=001|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Xd>, <Sn>, #<fbits>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      },
      {
        'fields' => 'opcode=010|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|0|rmode=00|opcode=010|scale:6|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Dd>, <Xn>, #<fbits>',
        'variant' => '64-bit to double-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|0|rmode=00|opcode=011|scale:6|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Dd>, <Xn>, #<fbits>',
        'variant' => '64-bit to double-precision',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|0|rmode=11|opcode=000|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Xd>, <Dn>, #<fbits>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|0|rmode=11|opcode=001|scale:6|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Xd>, <Dn>, #<fbits>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar|fixed-point',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          },
          {
            'name' => 'fbits',
            'field' => 'scale',
            'range' => '1 .. 64'
          }
        ]
      }
    ]
  },
  {
    'name' => 'Conversion between floating-point and integer',
    'opcode' => 'sf|0|S|11110|type:2|1|rmode:2|opcode:3|000000|Rn:5|Rd:5',
    'instructions' => [
      {
        'fields' => 'opcode=000|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNS <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNU <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=010|000000|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Sd>, <Wn>',
        'variant' => '32-bit to single-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=011|000000|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Sd>, <Wn>',
        'variant' => '32-bit to single-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=100|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=100|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAS <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=101|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=101|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAU <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=110|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=110|000000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=111|rmode=00|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=00|opcode=111|000000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Sd>, <Wn>',
        'variant' => '32-bit to single-precision',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=01|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=01|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPS <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=01|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=01|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPU <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=10|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=10|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMS <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=10|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=10|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMU <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=11|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=00|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=00|1|rmode=11|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Wd>, <Sn>',
        'variant' => 'Single-precision to 32-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=00|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNS <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=00|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNU <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=00|opcode=010|000000|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Dd>, <Wn>',
        'variant' => '32-bit to double-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=00|opcode=011|000000|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Dd>, <Wn>',
        'variant' => '32-bit to double-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Wn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=100|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=00|opcode=100|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAS <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=101|rmode=00|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=00|opcode=101|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAU <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=01|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=01|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPS <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=01|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=01|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPU <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=10|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=10|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMS <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=10|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=10|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMU <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=11|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=01|S=0|sf=0',
        'aliases' => undef,
        'opcode' => 'sf=0|0|S=0|11110|type=01|1|rmode=11|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Wd>, <Dn>',
        'variant' => 'Double-precision to 32-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Wd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=00|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNS <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=00|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNU <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=00|opcode=010|000000|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Sd>, <Xn>',
        'variant' => '64-bit to single-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=00|opcode=011|000000|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Sd>, <Xn>',
        'variant' => '64-bit to single-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Sd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=100|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=00|opcode=100|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAS <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=101|rmode=00|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=00|opcode=101|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAU <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=01|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=01|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPS <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=01|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=01|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPU <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=10|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=10|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMS <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=10|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=10|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMU <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=11|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=00|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=00|1|rmode=11|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Xd>, <Sn>',
        'variant' => 'Single-precision to 64-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Sn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNS <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTNU <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=010|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=010|000000|Rn:5|Rd:5',
        'syntax' => 'SCVTF <Dd>, <Xn>',
        'variant' => '64-bit to double-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=011|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=011|000000|Rn:5|Rd:5',
        'syntax' => 'UCVTF <Dd>, <Xn>',
        'variant' => '64-bit to double-precision',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=100|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=100|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAS <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=101|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=101|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTAU <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=110|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=110|000000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=111|rmode=00|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=00|opcode=111|000000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Dd>, <Xn>',
        'variant' => '64-bit to double-precision',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Dd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=01|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=01|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPS <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=01|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=01|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTPU <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=10|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=10|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMS <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=10|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=10|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTMU <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=000|rmode=11|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=11|opcode=000|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZS <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=001|rmode=11|type=01|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=01|1|rmode=11|opcode=001|000000|Rn:5|Rd:5',
        'syntax' => 'FCVTZU <Xd>, <Dn>',
        'variant' => 'Double-precision to 64-bit',
        'form' => 'scalar|integer',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Dn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=110|rmode=01|type=10|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=10|1|rmode=01|opcode=110|000000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Xd>, <Vn>.D[1]',
        'variant' => 'Top half of 128-bit to 64-bit',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Xd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Vn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      },
      {
        'fields' => 'opcode=111|rmode=01|type=10|S=0|sf=1',
        'aliases' => undef,
        'opcode' => 'sf=1|0|S=0|11110|type=10|1|rmode=01|opcode=111|000000|Rn:5|Rd:5',
        'syntax' => 'FMOV <Vd>.D[1], <Xn>',
        'variant' => '64-bit to top half of 128-bit',
        'form' => 'general',
        'symbols' => [
          {
            'name' => 'Vd',
            'field' => 'Rd',
            'range' => ''
          },
          {
            'name' => 'Xn',
            'field' => 'Rn',
            'range' => ''
          }
        ]
      }
    ]
  }
);
